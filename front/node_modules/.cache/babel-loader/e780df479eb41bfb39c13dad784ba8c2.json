{"ast":null,"code":"import _slicedToArray from \"/home/wilder/Projects/todo/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/front/src/components/Task.js\";\nimport React, { useState } from \"react\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport EditTodoForm from \"../components/EditTodoForm\";\nimport { ListItem, ListItemText, Checkbox, IconButton, makeStyles, Button, Box, Grid } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction Todo({\n  id,\n  task,\n  category,\n  date,\n  userId,\n  completed,\n  removeTodo,\n  editTodo\n}) {\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isEditing = _useToggleState2[0],\n        toggle = _useToggleState2[1];\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        done = _useState2[0],\n        setDone = _useState2[1];\n\n  const workColors = \"#3498DB\";\n  const personalColors = \"#E74C3C\";\n  const socialColors = \"#1ABC9C\";\n  const readingColors = \"#873600\";\n  const lifeColors = \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\";\n  const othersColors = \"#717D7E\";\n  let catColors = othersColors;\n\n  if (category === \"Work\") {\n    catColors = workColors;\n  } else if (category === \"Personal\") {\n    catColors = personalColors;\n  } else if (category === \"Social\") {\n    catColors = socialColors;\n  } else if (category === \"Reading\") {\n    catColors = readingColors;\n  } else if (category === \"Life Goals\") {\n    catColors = lifeColors;\n  } else if (category === \"Others\") {\n    catColors = othersColors;\n  }\n\n  const useStyles = makeStyles({\n    category: {\n      background: catColors,\n      border: 0,\n      borderRadius: 3,\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      color: \"white\",\n      pointerEvents: \"none\"\n    }\n  });\n  const classes = useStyles();\n  return React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, isEditing ? React.createElement(EditTodoForm, {\n    editTodo: editTodo,\n    id: id,\n    task: task,\n    category: category,\n    date: date,\n    userId: userId,\n    toggleEditForm: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }) : React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    md: 8,\n    lg: 5,\n    style: {\n      marginTop: \"2rem\",\n      alignContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Box, {\n    border: 1,\n    borderRadius: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    style: {\n      textDecoration: done ? \"line-through\" : \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Box, {\n    flexGrow: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    tabIndex: -1,\n    checked: completed,\n    onClick: () => setDone(!done),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, category)), React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Edit\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    onClick: () => removeTodo(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    style: {\n      marginLeft: \"0.7rem\",\n      width: \"80%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, task), React.createElement(Box, {\n    style: {\n      marginLeft: \"0.7rem\",\n      marginTop: \"0.3rem\",\n      width: \"45%\",\n      padding: \"0.3rem\"\n    },\n    border: 1,\n    borderRadius: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, date, userId))))));\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/wilder/Projects/todo/front/src/components/Task.js"],"names":["React","useState","useToggleState","EditTodoForm","ListItem","ListItemText","Checkbox","IconButton","makeStyles","Button","Box","Grid","DeleteIcon","EditIcon","Todo","id","task","category","date","userId","completed","removeTodo","editTodo","isEditing","toggle","done","setDone","workColors","personalColors","socialColors","readingColors","lifeColors","othersColors","catColors","useStyles","background","border","borderRadius","boxShadow","color","pointerEvents","classes","marginTop","alignContent","textDecoration","display","marginLeft","width","padding"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,SACEC,QADF,EAEEC,YAFF,EAGEC,QAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,GAPF,EAQEC,IARF,QASO,mBATP;AAUA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,SAASC,IAAT,CAAc;AACZC,EAAAA,EADY;AAEZC,EAAAA,IAFY;AAGZC,EAAAA,QAHY;AAIZC,EAAAA,IAJY;AAKZC,EAAAA,MALY;AAMZC,EAAAA,SANY;AAOZC,EAAAA,UAPY;AAQZC,EAAAA;AARY,CAAd,EASG;AAAA,0BAC2BpB,cAAc,CAAC,KAAD,CADzC;AAAA;AAAA,QACMqB,SADN;AAAA,QACiBC,MADjB;;AAAA,oBAEuBvB,QAAQ,CAAC,KAAD,CAF/B;AAAA;AAAA,QAEMwB,IAFN;AAAA,QAEYC,OAFZ;;AAGD,QAAMC,UAAU,GAAG,SAAnB;AACA,QAAMC,cAAc,GAAG,SAAvB;AACA,QAAMC,YAAY,GAAG,SAArB;AACA,QAAMC,aAAa,GAAG,SAAtB;AACA,QAAMC,UAAU,GAAG,kDAAnB;AACA,QAAMC,YAAY,GAAG,SAArB;AAEA,MAAIC,SAAS,GAAGD,YAAhB;;AACA,MAAIf,QAAQ,KAAK,MAAjB,EAAyB;AACvBgB,IAAAA,SAAS,GAAGN,UAAZ;AACD,GAFD,MAEO,IAAIV,QAAQ,KAAK,UAAjB,EAA6B;AAClCgB,IAAAA,SAAS,GAAGL,cAAZ;AACD,GAFM,MAEA,IAAIX,QAAQ,KAAK,QAAjB,EAA2B;AAChCgB,IAAAA,SAAS,GAAGJ,YAAZ;AACD,GAFM,MAEA,IAAIZ,QAAQ,KAAK,SAAjB,EAA4B;AACjCgB,IAAAA,SAAS,GAAGH,aAAZ;AACD,GAFM,MAEA,IAAIb,QAAQ,KAAK,YAAjB,EAA+B;AACpCgB,IAAAA,SAAS,GAAGF,UAAZ;AACD,GAFM,MAEA,IAAId,QAAQ,KAAK,QAAjB,EAA2B;AAChCgB,IAAAA,SAAS,GAAGD,YAAZ;AACD;;AAED,QAAME,SAAS,GAAG1B,UAAU,CAAC;AAC3BS,IAAAA,QAAQ,EAAE;AACRkB,MAAAA,UAAU,EAAEF,SADJ;AAERG,MAAAA,MAAM,EAAE,CAFA;AAGRC,MAAAA,YAAY,EAAE,CAHN;AAIRC,MAAAA,SAAS,EAAE,uCAJH;AAKRC,MAAAA,KAAK,EAAE,OALC;AAMRC,MAAAA,aAAa,EAAE;AANP;AADiB,GAAD,CAA5B;AAUA,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,SAAS,GACR,oBAAC,YAAD;AACE,IAAA,QAAQ,EAAED,QADZ;AAEE,IAAA,EAAE,EAAEP,EAFN;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAKE,IAAA,IAAI,EAAEC,IALR;AAME,IAAA,MAAM,EAAEC,MANV;AAOE,IAAA,cAAc,EAAEK,MAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAWR,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,EAAE,EAAE,CAJN;AAKE,IAAA,KAAK,EAAE;AAAEkB,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,YAAY,EAAE;AAAnC,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAb;AAAgB,IAAA,YAAY,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,cAAc,EAAEnB,IAAI,GAAG,cAAH,GAAoB;AADnC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEoB,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAE,CAAC,CADb;AAEE,IAAA,OAAO,EAAEzB,SAFX;AAGE,IAAA,OAAO,EAAE,MAAMM,OAAO,CAAC,CAACD,IAAF,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEgB,OAAO,CAACxB,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCA,QAAtC,CANF,CADF,EASE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,cAAc,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,kBAAW,MAAvB;AAA8B,IAAA,OAAO,EAAEO,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,UAAD;AACE,kBAAW,QADb;AAEE,IAAA,OAAO,EAAE,MAAMH,UAAU,CAACN,EAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAJF,CATF,CALF,EA0BE;AAAK,IAAA,KAAK,EAAE;AAAE+B,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqD/B,IAArD,CA1BF,EA2BE,oBAAC,GAAD;AACE,IAAA,KAAK,EAAE;AACL8B,MAAAA,UAAU,EAAE,QADP;AAELJ,MAAAA,SAAS,EAAE,QAFN;AAGLK,MAAAA,KAAK,EAAE,KAHF;AAILC,MAAAA,OAAO,EAAE;AAJJ,KADT;AAOE,IAAA,MAAM,EAAE,CAPV;AAQE,IAAA,YAAY,EAAE,EARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUG9B,IAVH,EAWGC,MAXH,CA3BF,CADF,CAPF,CADF,CAZJ,CADF;AAuED;;AAED,eAAeL,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport EditTodoForm from \"../components/EditTodoForm\";\n\nimport {\n  ListItem,\n  ListItemText,\n  Checkbox,\n  IconButton,\n  makeStyles,\n  Button,\n  Box,\n  Grid\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction Todo({\n  id,\n  task,\n  category,\n  date,\n  userId,\n  completed,\n  removeTodo,\n  editTodo\n}) {\n  const [isEditing, toggle] = useToggleState(false);\n  const [done, setDone] = useState(false);\n  const workColors = \"#3498DB\";\n  const personalColors = \"#E74C3C\";\n  const socialColors = \"#1ABC9C\";\n  const readingColors = \"#873600\";\n  const lifeColors = \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\";\n  const othersColors = \"#717D7E\";\n\n  let catColors = othersColors;\n  if (category === \"Work\") {\n    catColors = workColors;\n  } else if (category === \"Personal\") {\n    catColors = personalColors;\n  } else if (category === \"Social\") {\n    catColors = socialColors;\n  } else if (category === \"Reading\") {\n    catColors = readingColors;\n  } else if (category === \"Life Goals\") {\n    catColors = lifeColors;\n  } else if (category === \"Others\") {\n    catColors = othersColors;\n  }\n\n  const useStyles = makeStyles({\n    category: {\n      background: catColors,\n      border: 0,\n      borderRadius: 3,\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      color: \"white\",\n      pointerEvents: \"none\"\n    }\n  });\n  const classes = useStyles();\n  return (\n    <ListItem>\n      {isEditing ? (\n        <EditTodoForm\n          editTodo={editTodo}\n          id={id}\n          task={task}\n          category={category}\n          date={date}\n          userId={userId}\n          toggleEditForm={toggle}\n        />\n      ) : (\n        <Grid container justify=\"center\">\n          <Grid\n            item\n            xs={10}\n            md={8}\n            lg={5}\n            style={{ marginTop: \"2rem\", alignContent: \"center\" }}\n          >\n            <Box border={1} borderRadius={10}>\n              <ListItemText\n                style={{\n                  textDecoration: done ? \"line-through\" : \"none\"\n                }}\n              >\n                <Box style={{ display: \"flex\" }}>\n                  <Box flexGrow={1}>\n                    <Checkbox\n                      tabIndex={-1}\n                      checked={completed}\n                      onClick={() => setDone(!done)}\n                    />\n                    <Button className={classes.category}>{category}</Button>\n                  </Box>\n                  <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <IconButton aria-label=\"Edit\" onClick={toggle}>\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton\n                      aria-label=\"Delete\"\n                      onClick={() => removeTodo(id)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </Box>\n                </Box>\n                <div style={{ marginLeft: \"0.7rem\", width: \"80%\" }}>{task}</div>\n                <Box\n                  style={{\n                    marginLeft: \"0.7rem\",\n                    marginTop: \"0.3rem\",\n                    width: \"45%\",\n                    padding: \"0.3rem\"\n                  }}\n                  border={1}\n                  borderRadius={10}\n                >\n                  {date}\n                  {userId}\n                </Box>\n                {/* <ListItemSecondaryAction> */}\n                {/* </ListItemSecondaryAction> */}\n              </ListItemText>\n            </Box>\n          </Grid>\n        </Grid>\n      )}\n    </ListItem>\n  );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}