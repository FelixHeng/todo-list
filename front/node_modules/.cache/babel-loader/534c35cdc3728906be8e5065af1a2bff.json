{"ast":null,"code":"import _objectSpread from \"/home/wilder/Projects/todo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/wilder/Projects/todo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/src/components/TodoApp.js\";\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport useTodoState from \"../hooks/useTodoState\";\nimport { Paper } from \"@material-ui/core\";\nimport uuid from \"uuid/v4\";\n\nfunction TodoApp() {\n  const initialTodos = [{\n    id: 1,\n    task: \"Wash car\",\n    date: \"yesterday,\",\n    completed: false\n  }, {\n    id: 2,\n    task: \"Buy a New pc\",\n    date: \"today\",\n    completed: false\n  }, {\n    id: 3,\n    task: \"Learn chinese\",\n    date: \"tomorrow\",\n    completed: false\n  }];\n\n  const _useState = useState(initialTodos),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const addTodo = (newTodoText, newDate) => {\n    setTodos([...todos, {\n      id: uuid(),\n      task: newTodoText,\n      date: newDate,\n      completed: false\n    }]);\n  };\n\n  const removeTodo = todoId => {\n    // filter out removed todo\n    const updatedTodos = todos.filter(todo => todo.id !== todoId); // call setTodos with new todos array\n\n    setTodos(updatedTodos);\n  };\n\n  const toggleTodo = todoId => {\n    const updatedTodos = todos.map(todo => todo.id === todoId ? _objectSpread({}, todo, {\n      completed: !todo.completed\n    }) : todo);\n    setTodos(updatedTodos);\n  };\n\n  const editTodo = (todoId, newTask, newDate) => {\n    const updatedTodos = todos.map(todo => todo.id === todoId ? _objectSpread({}, todo, {\n      task: newTask,\n      date: newDate\n    }) : todo);\n    setTodos(updatedTodos);\n  };\n\n  return React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(TodoList, {\n    todos: todos,\n    removeTodo: removeTodo,\n    toggleTodo: toggleTodo,\n    editTodo: editTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n  setTodos();\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/home/wilder/Projects/todo/src/components/TodoApp.js"],"names":["React","useState","TodoForm","TodoList","useTodoState","Paper","uuid","TodoApp","initialTodos","id","task","date","completed","todos","setTodos","addTodo","newTodoText","newDate","removeTodo","todoId","updatedTodos","filter","todo","toggleTodo","map","editTodo","newTask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAMC,YAAY,GAAG,CACnB;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,UAAf;AAA2BC,IAAAA,IAAI,EAAE,YAAjC;AAA+CC,IAAAA,SAAS,EAAE;AAA1D,GADmB,EAEnB;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,cAAf;AAA+BC,IAAAA,IAAI,EAAE,OAArC;AAA8CC,IAAAA,SAAS,EAAE;AAAzD,GAFmB,EAGnB;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,eAAf;AAAgCC,IAAAA,IAAI,EAAE,UAAtC;AAAkDC,IAAAA,SAAS,EAAE;AAA7D,GAHmB,CAArB;;AADiB,oBAMSX,QAAQ,CAACO,YAAD,CANjB;AAAA;AAAA,QAMVK,KANU;AAAA,QAMHC,QANG;;AAOjB,QAAMC,OAAO,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA0B;AACxCH,IAAAA,QAAQ,CAAC,CACP,GAAGD,KADI,EAEP;AAAEJ,MAAAA,EAAE,EAAEH,IAAI,EAAV;AAAcI,MAAAA,IAAI,EAAEM,WAApB;AAAiCL,MAAAA,IAAI,EAAEM,OAAvC;AAAgDL,MAAAA,SAAS,EAAE;AAA3D,KAFO,CAAD,CAAR;AAID,GALD;;AAOA,QAAMM,UAAU,GAAGC,MAAM,IAAI;AAC3B;AACA,UAAMC,YAAY,GAAGP,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACb,EAAL,KAAYU,MAAjC,CAArB,CAF2B,CAG3B;;AACAL,IAAAA,QAAQ,CAACM,YAAD,CAAR;AACD,GALD;;AAOA,QAAMG,UAAU,GAAGJ,MAAM,IAAI;AAC3B,UAAMC,YAAY,GAAGP,KAAK,CAACW,GAAN,CAAUF,IAAI,IACjCA,IAAI,CAACb,EAAL,KAAYU,MAAZ,qBAA0BG,IAA1B;AAAgCV,MAAAA,SAAS,EAAE,CAACU,IAAI,CAACV;AAAjD,SAA+DU,IAD5C,CAArB;AAGAR,IAAAA,QAAQ,CAACM,YAAD,CAAR;AACD,GALD;;AAOA,QAAMK,QAAQ,GAAG,CAACN,MAAD,EAASO,OAAT,EAAkBT,OAAlB,KAA8B;AAC7C,UAAMG,YAAY,GAAGP,KAAK,CAACW,GAAN,CAAUF,IAAI,IACjCA,IAAI,CAACb,EAAL,KAAYU,MAAZ,qBAA0BG,IAA1B;AAAgCZ,MAAAA,IAAI,EAAEgB,OAAtC;AAA+Cf,MAAAA,IAAI,EAAEM;AAArD,SAAiEK,IAD9C,CAArB;AAGAR,IAAAA,QAAQ,CAACM,YAAD,CAAR;AACD,GALD;;AAOA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEL,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,UAAU,EAAEK,UAFd;AAGE,IAAA,UAAU,EAAEK,UAHd;AAIE,IAAA,QAAQ,EAAEE,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWAX,EAAAA,QAAQ;AACT;;AAED,eAAeP,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport useTodoState from \"../hooks/useTodoState\";\n\nimport { Paper } from \"@material-ui/core\";\nimport uuid from \"uuid/v4\";\n\nfunction TodoApp() {\n  const initialTodos = [\n    { id: 1, task: \"Wash car\", date: \"yesterday,\", completed: false },\n    { id: 2, task: \"Buy a New pc\", date: \"today\", completed: false },\n    { id: 3, task: \"Learn chinese\", date: \"tomorrow\", completed: false }\n  ];\n  const [todos, setTodos] = useState(initialTodos);\n  const addTodo = (newTodoText, newDate) => {\n    setTodos([\n      ...todos,\n      { id: uuid(), task: newTodoText, date: newDate, completed: false }\n    ]);\n  };\n\n  const removeTodo = todoId => {\n    // filter out removed todo\n    const updatedTodos = todos.filter(todo => todo.id !== todoId);\n    // call setTodos with new todos array\n    setTodos(updatedTodos);\n  };\n\n  const toggleTodo = todoId => {\n    const updatedTodos = todos.map(todo =>\n      todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n    );\n    setTodos(updatedTodos);\n  };\n\n  const editTodo = (todoId, newTask, newDate) => {\n    const updatedTodos = todos.map(todo =>\n      todo.id === todoId ? { ...todo, task: newTask, date: newDate } : todo\n    );\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <Paper>\n      <TodoForm addTodo={addTodo} />\n      <TodoList\n        todos={todos}\n        removeTodo={removeTodo}\n        toggleTodo={toggleTodo}\n        editTodo={editTodo}\n      />\n    </Paper>\n  );\n  setTodos();\n}\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}