{"ast":null,"code":"import _slicedToArray from \"/home/wilder/Projects/todo/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/front/src/components/TodoItem.js\";\nimport React from \"react\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport EditTodoForm from \"../components/EditTodoForm\";\nimport { ListItem, ListItemText, Checkbox, IconButton, ListItemSecondaryAction, makeStyles, Button, Box } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction Todo({\n  id,\n  task,\n  category,\n  date,\n  completed,\n  removeTodo,\n  toggleTodo,\n  editTodo\n}) {\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isEditing = _useToggleState2[0],\n        toggle = _useToggleState2[1];\n\n  const workColors = \"#3498DB\";\n  const personalColors = \"#E74C3C\";\n  const socialColors = \"#1ABC9C\";\n  const readingColors = \"#873600\";\n  const lifeColors = \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\";\n  const othersColors = \"#717D7E\";\n  let catColors = othersColors;\n\n  if (category === \"Work\") {\n    catColors = workColors;\n  } else if (category === \"Personal\") {\n    catColors = personalColors;\n  } else if (category === \"Social\") {\n    catColors = socialColors;\n  } else if (category === \"Reading\") {\n    catColors = readingColors;\n  } else if (category === \"Life Goals\") {\n    catColors = lifeColors;\n  } else if (category === \"Others\") {\n    catColors = othersColors;\n  }\n\n  console.log(\"caaaat\", catColors);\n  console.log(\"value\", category);\n  const useStyles = makeStyles({\n    category: {\n      background: catColors,\n      border: 0,\n      borderRadius: 3,\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      color: \"white\",\n      pointerEvents: \"none\" // textTransform: \"none\"\n\n    }\n  });\n  const classes = useStyles(); // console.log(\"cateeee\", category);\n  // console.log(\"daaate\", date);\n\n  return React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, isEditing ? React.createElement(EditTodoForm, {\n    editTodo: editTodo,\n    id: id,\n    task: task,\n    category: category,\n    date: date,\n    toggleEditForm: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(ListItemText, {\n    style: {\n      textDecoration: completed ? \"line-through\" : \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Box, {\n    flexGrow: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    tabIndex: -1,\n    checked: completed,\n    onClick: () => toggleTodo(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, category)), React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Edit\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    onClick: () => removeTodo(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    style: {\n      marginLeft: \"0.7rem\",\n      width: \"80%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, task), React.createElement(Box, {\n    style: {\n      marginLeft: \"0.7rem\",\n      marginTop: \"0.3rem\",\n      width: \"45%\",\n      padding: \"0.3rem\"\n    },\n    border: 1,\n    borderRadius: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, date))));\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/wilder/Projects/todo/front/src/components/TodoItem.js"],"names":["React","useToggleState","EditTodoForm","ListItem","ListItemText","Checkbox","IconButton","ListItemSecondaryAction","makeStyles","Button","Box","DeleteIcon","EditIcon","Todo","id","task","category","date","completed","removeTodo","toggleTodo","editTodo","isEditing","toggle","workColors","personalColors","socialColors","readingColors","lifeColors","othersColors","catColors","console","log","useStyles","background","border","borderRadius","boxShadow","color","pointerEvents","classes","textDecoration","display","marginLeft","width","marginTop","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport EditTodoForm from \"../components/EditTodoForm\";\n\nimport {\n  ListItem,\n  ListItemText,\n  Checkbox,\n  IconButton,\n  ListItemSecondaryAction,\n  makeStyles,\n  Button,\n  Box\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction Todo({\n  id,\n  task,\n  category,\n  date,\n  completed,\n  removeTodo,\n  toggleTodo,\n  editTodo\n}) {\n  const [isEditing, toggle] = useToggleState(false);\n  const workColors = \"#3498DB\";\n  const personalColors = \"#E74C3C\";\n  const socialColors = \"#1ABC9C\";\n  const readingColors = \"#873600\";\n  const lifeColors = \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\";\n  const othersColors = \"#717D7E\";\n\n  let catColors = othersColors;\n  if (category === \"Work\") {\n    catColors = workColors;\n  } else if (category === \"Personal\") {\n    catColors = personalColors;\n  } else if (category === \"Social\") {\n    catColors = socialColors;\n  } else if (category === \"Reading\") {\n    catColors = readingColors;\n  } else if (category === \"Life Goals\") {\n    catColors = lifeColors;\n  } else if (category === \"Others\") {\n    catColors = othersColors;\n  }\n\n  console.log(\"caaaat\", catColors);\n  console.log(\"value\", category);\n  const useStyles = makeStyles({\n    category: {\n      background: catColors,\n      border: 0,\n      borderRadius: 3,\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      color: \"white\",\n      pointerEvents: \"none\"\n      // textTransform: \"none\"\n    }\n  });\n  const classes = useStyles();\n  // console.log(\"cateeee\", category);\n  // console.log(\"daaate\", date);\n  return (\n    <ListItem>\n      {isEditing ? (\n        <EditTodoForm\n          editTodo={editTodo}\n          id={id}\n          task={task}\n          category={category}\n          date={date}\n          toggleEditForm={toggle}\n        />\n      ) : (\n        <>\n          <ListItemText\n            style={{\n              textDecoration: completed ? \"line-through\" : \"none\"\n            }}\n          >\n            <Box style={{ display: \"flex\" }}>\n              <Box flexGrow={1}>\n                <Checkbox\n                  tabIndex={-1}\n                  checked={completed}\n                  onClick={() => toggleTodo(id)}\n                />\n                <Button className={classes.category}>{category}</Button>\n              </Box>\n              <Box display=\"flex\" justifyContent=\"flex-end\">\n                <IconButton aria-label=\"Edit\" onClick={toggle}>\n                  <EditIcon />\n                </IconButton>\n                <IconButton aria-label=\"Delete\" onClick={() => removeTodo(id)}>\n                  <DeleteIcon />\n                </IconButton>\n              </Box>\n            </Box>\n            <div style={{ marginLeft: \"0.7rem\", width: \"80%\" }}>{task}</div>\n            <Box\n              style={{\n                marginLeft: \"0.7rem\",\n                marginTop: \"0.3rem\",\n                width: \"45%\",\n                padding: \"0.3rem\"\n              }}\n              border={1}\n              borderRadius={10}\n            >\n              {date}\n            </Box>\n            {/* <ListItemSecondaryAction> */}\n            {/* </ListItemSecondaryAction> */}\n          </ListItemText>\n        </>\n      )}\n    </ListItem>\n  );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}