{"ast":null,"code":"import _slicedToArray from \"/home/wilder/Projects/todo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/src/components/TodoForm.js\";\nimport React from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport \"date-fns\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { Paper, TextField, Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction TodoForm({\n  addTodo\n}) {\n  const _useInputState = useInputState(\"\"),\n        _useInputState2 = _slicedToArray(_useInputState, 3),\n        value = _useInputState2[0],\n        handleChange = _useInputState2[1],\n        reset = _useInputState2[2];\n\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isAdding = _useToggleState2[0],\n        toggle = _useToggleState2[1];\n\n  const _React$useState = React.useState(new Date(\"2014-08-18T21:11:54\")),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        selectedDate = _React$useState2[0],\n        setSelectedDate = _React$useState2[1];\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  return React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, isAdding ? React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      if (!value) return;\n      addTodo(value);\n      reset();\n      toggle();\n    },\n    style: {\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: value,\n    onChange: handleChange,\n    label: \"Add new todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    label: \"Date picker inline\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      \"aria-label\": \"change date\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => {\n      if (!value) return;\n      addTodo(value);\n      reset();\n      toggle();\n    },\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Add Task\"), React.createElement(Button, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Cancel\")) : React.createElement(Button, {\n    onClick: toggle,\n    style: {\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    style: {\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), \"Add task\"));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/home/wilder/Projects/todo/src/components/TodoForm.js"],"names":["React","useInputState","useToggleState","KeyboardDatePicker","Paper","TextField","Button","AddIcon","TodoForm","addTodo","value","handleChange","reset","isAdding","toggle","useState","Date","selectedDate","setSelectedDate","handleDateChange","date","e","preventDefault","padding"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,OAAO,UAAP;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,mBAAzC;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAAA,yBACQR,aAAa,CAAC,EAAD,CADrB;AAAA;AAAA,QACtBS,KADsB;AAAA,QACfC,YADe;AAAA,QACDC,KADC;;AAAA,0BAEFV,cAAc,CAAC,KAAD,CAFZ;AAAA;AAAA,QAEtBW,QAFsB;AAAA,QAEZC,MAFY;;AAAA,0BAGWd,KAAK,CAACe,QAAN,CACtC,IAAIC,IAAJ,CAAS,qBAAT,CADsC,CAHX;AAAA;AAAA,QAGtBC,YAHsB;AAAA,QAGRC,eAHQ;;AAO7B,QAAMC,gBAAgB,GAAGC,IAAI,IAAI;AAC/BF,IAAAA,eAAe,CAACE,IAAD,CAAf;AACD,GAFD;;AAGA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QAAQ,GACP;AACE,IAAA,QAAQ,EAAEQ,CAAC,IAAI;AACbA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAI,CAACZ,KAAL,EAAY;AACZD,MAAAA,OAAO,CAACC,KAAD,CAAP;AACAE,MAAAA,KAAK;AACLE,MAAAA,MAAM;AACP,KAPH;AAQE,IAAA,KAAK,EAAE;AAAES,MAAAA,OAAO,EAAE;AAAX,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEb,KADT;AAEE,IAAA,QAAQ,EAAEC,YAFZ;AAGE,IAAA,KAAK,EAAC,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAeE,oBAAC,kBAAD;AACE,IAAA,cAAc,MADhB;AAEE,IAAA,OAAO,EAAC,QAFV;AAGE,IAAA,MAAM,EAAC,YAHT;AAIE,IAAA,MAAM,EAAC,QAJT;AAKE,IAAA,EAAE,EAAC,oBALL;AAME,IAAA,KAAK,EAAC,oBANR;AAOE,IAAA,KAAK,EAAEM,YAPT;AAQE,IAAA,QAAQ,EAAEE,gBARZ;AASE,IAAA,mBAAmB,EAAE;AACnB,oBAAc;AADK,KATvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EA4BE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAI,CAACT,KAAL,EAAY;AACZD,MAAAA,OAAO,CAACC,KAAD,CAAP;AACAE,MAAAA,KAAK;AACLE,MAAAA,MAAM;AACP,KANH;AAOE,IAAA,OAAO,EAAC,WAPV;AAQE,IAAA,KAAK,EAAC,WARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BF,EAwCE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCF,CADO,GA4CP,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,MAAjB;AAAyB,IAAA,KAAK,EAAE;AAAES,MAAAA,OAAO,EAAE;AAAX,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,aA7CJ,CADF;AAqDD;;AAED,eAAef,QAAf","sourcesContent":["import React from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\n\nimport \"date-fns\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { Paper, TextField, Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction TodoForm({ addTodo }) {\n  const [value, handleChange, reset] = useInputState(\"\");\n  const [isAdding, toggle] = useToggleState(false);\n  const [selectedDate, setSelectedDate] = React.useState(\n    new Date(\"2014-08-18T21:11:54\")\n  );\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  return (\n    <Paper>\n      {isAdding ? (\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            if (!value) return;\n            addTodo(value);\n            reset();\n            toggle();\n          }}\n          style={{ padding: \"1rem\" }}\n        >\n          <TextField\n            value={value}\n            onChange={handleChange}\n            label=\"Add new todo\"\n          />\n          <KeyboardDatePicker\n            disableToolbar\n            variant=\"inline\"\n            format=\"MM/dd/yyyy\"\n            margin=\"normal\"\n            id=\"date-picker-inline\"\n            label=\"Date picker inline\"\n            value={selectedDate}\n            onChange={handleDateChange}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\"\n            }}\n          />\n          <Button\n            onClick={() => {\n              if (!value) return;\n              addTodo(value);\n              reset();\n              toggle();\n            }}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Add Task\n          </Button>\n          <Button onClick={toggle}>Cancel</Button>\n        </form>\n      ) : (\n        <Button onClick={toggle} style={{ padding: \"1rem\" }}>\n          <AddIcon style={{ padding: \"1rem\" }} />\n          Add task\n        </Button>\n      )}\n    </Paper>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}