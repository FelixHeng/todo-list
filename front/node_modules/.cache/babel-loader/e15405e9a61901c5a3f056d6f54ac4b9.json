{"ast":null,"code":"import _objectSpread from \"/home/wilder/Projects/todo/front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/wilder/Projects/todo/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/front/src/components/TodoApp.js\";\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport useTodoState from \"../hooks/useTodoState\";\nimport axios from \"axios\";\nimport { Paper, Divider } from \"@material-ui/core\";\nimport uuid from \"uuid/v4\";\n\nfunction TodoApp() {\n  const initialTodos = [];\n\n  const _useState = useState(initialTodos),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const _useState3 = useState(localStorage.getItem(\"id\")),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userId = _useState4[0],\n        setUserId = _useState4[1];\n\n  const addTodo = (newTodoText, newCategory, newUserId, newDate) => {\n    setTodos([...todos, {\n      id: uuid(),\n      category: newCategory,\n      task: newTodoText,\n      userId: newUserId,\n      date: newDate,\n      completed: false\n    }]);\n  };\n\n  const removeTodo = todoId => {\n    const updatedTodos = todos.filter(todo => todo.id !== todoId);\n    setTodos(updatedTodos);\n  };\n\n  const toggleTodo = todoId => {\n    const updatedTodos = todos.map(todo => todo.id === todoId ? _objectSpread({}, todo, {\n      completed: !todo.completed\n    }) : todo);\n    setTodos(updatedTodos);\n  };\n\n  const editTodo = (id, value) => {\n    const updatedTodos = todos.map(todo => todo.id === id ? _objectSpread({}, todo, {\n      task: value,\n      id: id\n    }) : todo);\n    setTodos(updatedTodos);\n    const body = {\n      task: value\n    };\n    axios.put(`http://localhost:5000/todo/${userId}/all/${id}`, body).then(response => response.data).then(data => {\n      console.log(data);\n      window.location.reload();\n    });\n  };\n\n  console.log(\"setTodossss\", todos);\n  return React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(TodoList, {\n    todos: todos,\n    removeTodo: removeTodo,\n    toggleTodo: toggleTodo,\n    editTodo: editTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n  setTodos();\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/home/wilder/Projects/todo/front/src/components/TodoApp.js"],"names":["React","useState","TodoForm","TodoList","useTodoState","axios","Paper","Divider","uuid","TodoApp","initialTodos","todos","setTodos","localStorage","getItem","userId","setUserId","addTodo","newTodoText","newCategory","newUserId","newDate","id","category","task","date","completed","removeTodo","todoId","updatedTodos","filter","todo","toggleTodo","map","editTodo","value","body","put","then","response","data","console","log","window","location","reload"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport useTodoState from \"../hooks/useTodoState\";\nimport axios from \"axios\";\n\nimport { Paper, Divider } from \"@material-ui/core\";\nimport uuid from \"uuid/v4\";\n\nfunction TodoApp() {\n  const initialTodos = [];\n  const [todos, setTodos] = useState(initialTodos);\n  const [userId, setUserId] = useState(localStorage.getItem(\"id\"));\n  const addTodo = (newTodoText, newCategory, newUserId, newDate) => {\n    setTodos([\n      ...todos,\n      {\n        id: uuid(),\n        category: newCategory,\n        task: newTodoText,\n        userId: newUserId,\n        date: newDate,\n        completed: false\n      }\n    ]);\n  };\n\n  const removeTodo = todoId => {\n    const updatedTodos = todos.filter(todo => todo.id !== todoId);\n    setTodos(updatedTodos);\n  };\n\n  const toggleTodo = todoId => {\n    const updatedTodos = todos.map(todo =>\n      todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n    );\n    setTodos(updatedTodos);\n  };\n\n  const editTodo = (id, value) => {\n    const updatedTodos = todos.map(todo =>\n      todo.id === id\n        ? {\n            ...todo,\n            task: value,\n            id: id\n          }\n        : todo\n    );\n    setTodos(updatedTodos);\n    const body = { task: value };\n    axios\n      .put(`http://localhost:5000/todo/${userId}/all/${id}`, body)\n      .then(response => response.data)\n      .then(data => {\n        console.log(data);\n        window.location.reload();\n      });\n  };\n\n  console.log(\"setTodossss\", todos);\n  return (\n    <Paper>\n      <TodoForm addTodo={addTodo} />\n      <TodoList\n        todos={todos}\n        removeTodo={removeTodo}\n        toggleTodo={toggleTodo}\n        editTodo={editTodo}\n      />\n    </Paper>\n  );\n  setTodos();\n}\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}