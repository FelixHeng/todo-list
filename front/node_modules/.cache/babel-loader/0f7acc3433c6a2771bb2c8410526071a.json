{"ast":null,"code":"import _slicedToArray from \"/home/wilder/Projects/todo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/src/components/TodoForm.js\";\nimport React, { useState } from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, DatePicker, TimePicker, DateTimePicker } from \"@material-ui/pickers\";\nimport { Paper, TextField, Button, ListItemSecondaryAction, ListItem } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction TodoForm({\n  addTodo\n}) {\n  const _useInputState = useInputState(\"\"),\n        _useInputState2 = _slicedToArray(_useInputState, 3),\n        value = _useInputState2[0],\n        handleChange = _useInputState2[1],\n        reset = _useInputState2[2];\n\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isAdding = _useToggleState2[0],\n        toggle = _useToggleState2[1];\n\n  const _useState = useState(new Date()),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedDate = _useState2[0],\n        handleDateChange = _useState2[1];\n\n  const date = selectedDate.toString();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value, date);\n    reset();\n    toggle();\n  };\n\n  return React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, isAdding ? React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      if (!value) return;\n      addTodo(value);\n      reset();\n      toggle();\n    },\n    style: {\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: value,\n    onChange: handleChange,\n    label: \"Add new todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"date\",\n    label: \"Schedule\",\n    type: \"date\",\n    defaultValue: \"2020-01-01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(ListItemSecondaryAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleSubmit,\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Add Task\"), React.createElement(Button, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Cancel\"))) : React.createElement(Button, {\n    onClick: toggle,\n    style: {\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    style: {\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), \"Add task\"));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/home/wilder/Projects/todo/src/components/TodoForm.js"],"names":["React","useState","useInputState","useToggleState","DateFnsUtils","MuiPickersUtilsProvider","DatePicker","TimePicker","DateTimePicker","Paper","TextField","Button","ListItemSecondaryAction","ListItem","AddIcon","TodoForm","addTodo","value","handleChange","reset","isAdding","toggle","Date","selectedDate","handleDateChange","date","toString","handleSubmit","e","preventDefault","padding"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SACEC,uBADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,cAJF,QAKO,sBALP;AAOA,SACEC,KADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,uBAJF,EAKEC,QALF,QAMO,mBANP;AAOA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAAA,yBACQd,aAAa,CAAC,EAAD,CADrB;AAAA;AAAA,QACtBe,KADsB;AAAA,QACfC,YADe;AAAA,QACDC,KADC;;AAAA,0BAEFhB,cAAc,CAAC,KAAD,CAFZ;AAAA;AAAA,QAEtBiB,QAFsB;AAAA,QAEZC,MAFY;;AAAA,oBAGYpB,QAAQ,CAAC,IAAIqB,IAAJ,EAAD,CAHpB;AAAA;AAAA,QAGtBC,YAHsB;AAAA,QAGRC,gBAHQ;;AAI7B,QAAMC,IAAI,GAAGF,YAAY,CAACG,QAAb,EAAb;;AACA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACZ,KAAL,EAAY;AACZD,IAAAA,OAAO,CAACC,KAAD,EAAQQ,IAAR,CAAP;AACAN,IAAAA,KAAK;AACLE,IAAAA,MAAM;AACP,GAND;;AAOA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,GACP;AACE,IAAA,QAAQ,EAAEQ,CAAC,IAAI;AACbA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAI,CAACZ,KAAL,EAAY;AACZD,MAAAA,OAAO,CAACC,KAAD,CAAP;AACAE,MAAAA,KAAK;AACLE,MAAAA,MAAM;AACP,KAPH;AAQE,IAAA,KAAK,EAAE;AAAES,MAAAA,OAAO,EAAE;AAAX,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEb,KADT;AAEE,IAAA,QAAQ,EAAEC,YAFZ;AAGE,IAAA,KAAK,EAAC,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAeE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,YAAY,EAAC,YAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAqBE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAES,YADX;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,WAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CArBF,CADO,GAkCP,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,MAAjB;AAAyB,IAAA,KAAK,EAAE;AAAES,MAAAA,OAAO,EAAE;AAAX,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,aAnCJ,CADF;AA2CD;;AAED,eAAef,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker,\n  TimePicker,\n  DateTimePicker\n} from \"@material-ui/pickers\";\n\nimport {\n  Paper,\n  TextField,\n  Button,\n  ListItemSecondaryAction,\n  ListItem\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction TodoForm({ addTodo }) {\n  const [value, handleChange, reset] = useInputState(\"\");\n  const [isAdding, toggle] = useToggleState(false);\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const date = selectedDate.toString();\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value, date);\n    reset();\n    toggle();\n  };\n  return (\n    <ListItem>\n      {isAdding ? (\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            if (!value) return;\n            addTodo(value);\n            reset();\n            toggle();\n          }}\n          style={{ padding: \"1rem\" }}\n        >\n          <TextField\n            value={value}\n            onChange={handleChange}\n            label=\"Add new todo\"\n          />\n          <TextField\n            id=\"date\"\n            label=\"Schedule\"\n            type=\"date\"\n            defaultValue=\"2020-01-01\"\n          />\n          <ListItemSecondaryAction>\n            <Button\n              onClick={handleSubmit}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Add Task\n            </Button>\n            <Button onClick={toggle}>Cancel</Button>\n          </ListItemSecondaryAction>\n        </form>\n      ) : (\n        <Button onClick={toggle} style={{ padding: \"1rem\" }}>\n          <AddIcon style={{ padding: \"1rem\" }} />\n          Add task\n        </Button>\n      )}\n    </ListItem>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}