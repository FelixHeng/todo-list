{"ast":null,"code":"import _slicedToArray from \"/home/wilder/Projects/todo/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/front/src/components/TodoForm.js\";\nimport React, { useState } from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport Category from \"./Category\"; //npm install date-fns@next @date-io/date-fns\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\";\nimport { MuiPickersUtilsProvider, DatePicker, TimePicker } from \"@material-ui/pickers\";\nimport { Paper, TextField, Button, ListItemSecondaryAction, ListItem, Grid } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction TodoForm({\n  addTodo\n}) {\n  const _useState = useState(\"Others\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        category = _useState2[0],\n        setCategory = _useState2[1];\n\n  const _useInputState = useInputState(\"\"),\n        _useInputState2 = _slicedToArray(_useInputState, 3),\n        value = _useInputState2[0],\n        handleChange = _useInputState2[1],\n        reset = _useInputState2[2];\n\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isAdding = _useToggleState2[0],\n        toggle = _useToggleState2[1];\n\n  const _useState3 = useState(localStorage.getItem(\"id\")),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userId = _useState4[0],\n        setUserId = _useState4[1];\n\n  const _useState5 = useState(new Date()),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedDate = _useState6[0],\n        handleDateChange = _useState6[1];\n\n  const date = selectedDate.toLocaleString(\"fr-FR\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  });\n\n  const handleSubmit = event => {\n    const body = {\n      value: value,\n      category: category,\n      userId: userId,\n      date: date\n    };\n    console.log(body);\n    axios.post(\"http://localhost:5000/auth/signup\", body).then(res => setFlash(res.data.flash), err => setFlash(err), res => console.log(\"res data\", res), err => console.log(\"errroooooo\", err) // err => setFlash(err.data.flash),\n    // res => console.log(\"resss\", res.data.flash),\n    // res => console.log(\"data\", res.flash),\n    // res => console.log(\"flash\", res.data.flash),\n    );\n    event.preventDefault();\n  }; // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   if (!value) return;\n  //   addTodo(value, category, userId, date);\n  //   reset();\n  //   toggle();\n  // };\n\n\n  const handleChangeCat = value => {\n    setCategory(value);\n  };\n\n  return React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, isAdding ? React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Category, {\n    value: value,\n    valueChange: handleChange,\n    setCategory: handleChangeCat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pickers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    value: selectedDate,\n    onChange: handleDateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(TimePicker, {\n    value: selectedDate,\n    onChange: handleDateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    style: {\n      marginTop: \"1.2rem\"\n    },\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleSubmit,\n    variant: \"outlined\",\n    style: {\n      color: green[500],\n      borderColor: green[500],\n      fontWeight: \"bolder\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Add Task\"), React.createElement(Button, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Cancel\")))) : React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: toggle,\n    style: {\n      fontSize: \"1rem\",\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), \"Add task\")));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/home/wilder/Projects/todo/front/src/components/TodoForm.js"],"names":["React","useState","useInputState","useToggleState","Category","DateFnsUtils","format","MuiPickersUtilsProvider","DatePicker","TimePicker","Paper","TextField","Button","ListItemSecondaryAction","ListItem","Grid","green","AddIcon","TodoForm","addTodo","category","setCategory","value","handleChange","reset","isAdding","toggle","localStorage","getItem","userId","setUserId","Date","selectedDate","handleDateChange","date","toLocaleString","weekday","year","month","day","hour","minute","handleSubmit","event","body","console","log","axios","post","then","res","setFlash","data","flash","err","preventDefault","handleChangeCat","marginTop","color","borderColor","fontWeight","fontSize","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport Category from \"./Category\";\n//npm install date-fns@next @date-io/date-fns\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker,\n  TimePicker\n} from \"@material-ui/pickers\";\n\nimport {\n  Paper,\n  TextField,\n  Button,\n  ListItemSecondaryAction,\n  ListItem,\n  Grid\n} from \"@material-ui/core\";\n\nimport { green } from \"@material-ui/core/colors\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction TodoForm({ addTodo }) {\n  const [category, setCategory] = useState(\"Others\");\n  const [value, handleChange, reset] = useInputState(\"\");\n  const [isAdding, toggle] = useToggleState(false);\n  const [userId, setUserId] = useState(localStorage.getItem(\"id\"));\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const date = selectedDate.toLocaleString(\"fr-FR\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  });\n\n  const handleSubmit = event => {\n    const body = {\n      value: value,\n      category: category,\n      userId: userId,\n      date: date\n    };\n\n    console.log(body);\n\n    axios.post(\"http://localhost:5000/auth/signup\", body).then(\n      res => setFlash(res.data.flash),\n      err => setFlash(err),\n      res => console.log(\"res data\", res),\n      err => console.log(\"errroooooo\", err)\n      // err => setFlash(err.data.flash),\n\n      // res => console.log(\"resss\", res.data.flash),\n      // res => console.log(\"data\", res.flash),\n      // res => console.log(\"flash\", res.data.flash),\n    );\n    event.preventDefault();\n  };\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   if (!value) return;\n  //   addTodo(value, category, userId, date);\n  //   reset();\n  //   toggle();\n  // };\n\n  const handleChangeCat = value => {\n    setCategory(value);\n  };\n  return (\n    <ListItem>\n      {isAdding ? (\n        <Grid container justify=\"center\">\n          <form>\n            <Category\n              value={value}\n              valueChange={handleChange}\n              setCategory={handleChangeCat}\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <div className=\"pickers\">\n                <DatePicker value={selectedDate} onChange={handleDateChange} />\n                <TimePicker value={selectedDate} onChange={handleDateChange} />\n              </div>\n            </MuiPickersUtilsProvider>\n            {/* <ListItemSecondaryAction> */}\n            <Grid container style={{ marginTop: \"1.2rem\" }} justify=\"center\">\n              <Button\n                onClick={handleSubmit}\n                variant=\"outlined\"\n                style={{\n                  color: green[500],\n                  borderColor: green[500],\n                  fontWeight: \"bolder\"\n                }}\n              >\n                Add Task\n              </Button>\n              <Button onClick={toggle}>Cancel</Button>\n            </Grid>\n            {/* </ListItemSecondaryAction> */}\n          </form>\n        </Grid>\n      ) : (\n        <Grid container justify=\"center\">\n          <Button\n            onClick={toggle}\n            style={{\n              fontSize: \"1rem\",\n              padding: \"1rem\"\n            }}\n          >\n            <AddIcon />\n            Add task\n          </Button>\n        </Grid>\n      )}\n    </ListItem>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}