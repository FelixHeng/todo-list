{"ast":null,"code":"import _slicedToArray from \"/home/wilder/Projects/todo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\n\nfunction useToggle(initialVal = false) {\n  const _useState = useState(initialVal),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const toggle = () => {\n    setState(!state);\n  }; // return piece of state AND a function to toggle it;\n\n\n  return [state, toggle];\n}\n\nexport default useToggle;","map":{"version":3,"sources":["/home/wilder/Projects/todo/src/hooks/useToggleState.js"],"names":["useState","useToggle","initialVal","state","setState","toggle"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,SAAT,CAAmBC,UAAU,GAAG,KAAhC,EAAuC;AAAA,oBACXF,QAAQ,CAACE,UAAD,CADG;AAAA;AAAA,QAC9BC,KAD8B;AAAA,QACvBC,QADuB;;AAErC,QAAMC,MAAM,GAAG,MAAM;AACnBD,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GAFD,CAFqC,CAKrC;;;AACA,SAAO,CAACA,KAAD,EAAQE,MAAR,CAAP;AACD;;AAED,eAAeJ,SAAf","sourcesContent":["import { useState } from \"react\";\n\nfunction useToggle(initialVal = false) {\n  const [state, setState] = useState(initialVal);\n  const toggle = () => {\n    setState(!state);\n  };\n  // return piece of state AND a function to toggle it;\n  return [state, toggle];\n}\n\nexport default useToggle;\n"]},"metadata":{},"sourceType":"module"}