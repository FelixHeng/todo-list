{"ast":null,"code":"import _slicedToArray from \"/home/wilder/Projects/todo/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/front/src/components/TodoForm.js\";\nimport React, { useState } from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport Category from \"./Category\"; //npm install date-fns@next @date-io/date-fns\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\";\nimport { MuiPickersUtilsProvider, DatePicker, TimePicker } from \"@material-ui/pickers\";\nimport { Paper, TextField, Button, ListItemSecondaryAction, ListItem, Grid } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction TodoForm({\n  addTodo\n}) {\n  const _useState = useState(\"Others\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        category = _useState2[0],\n        setCategory = _useState2[1];\n\n  const _useInputState = useInputState(\"\"),\n        _useInputState2 = _slicedToArray(_useInputState, 3),\n        value = _useInputState2[0],\n        handleChange = _useInputState2[1],\n        reset = _useInputState2[2];\n\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isAdding = _useToggleState2[0],\n        toggle = _useToggleState2[1];\n\n  const _useState3 = useState(new Date()),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedDate = _useState4[0],\n        handleDateChange = _useState4[1];\n\n  const date = selectedDate.toLocaleString(\"fr-FR\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value, category, date);\n    reset();\n    toggle();\n  };\n\n  const handleChangeCat = value => {\n    setCategory(value);\n  };\n\n  return React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, isAdding ? React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Category, {\n    value: value,\n    valueChange: handleChange,\n    setCategory: handleChangeCat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pickers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    value: selectedDate,\n    onChange: handleDateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(TimePicker, {\n    value: selectedDate,\n    onChange: handleDateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    style: {\n      marginTop: \"1.2rem\"\n    },\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleSubmit,\n    variant: \"outlined\",\n    style: {\n      color: green[500],\n      borderColor: green[500],\n      fontWeight: \"bolder\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Add Task\"), React.createElement(Button, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Cancel\")))) : React.createElement(Button, {\n    onClick: toggle,\n    style: {\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    style: {\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), \"Add task\"));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/home/wilder/Projects/todo/front/src/components/TodoForm.js"],"names":["React","useState","useInputState","useToggleState","Category","DateFnsUtils","format","MuiPickersUtilsProvider","DatePicker","TimePicker","Paper","TextField","Button","ListItemSecondaryAction","ListItem","Grid","green","AddIcon","TodoForm","addTodo","category","setCategory","value","handleChange","reset","isAdding","toggle","Date","selectedDate","handleDateChange","date","toLocaleString","weekday","year","month","day","hour","minute","handleSubmit","e","preventDefault","handleChangeCat","marginTop","color","borderColor","fontWeight","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport Category from \"./Category\";\n//npm install date-fns@next @date-io/date-fns\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker,\n  TimePicker\n} from \"@material-ui/pickers\";\n\nimport {\n  Paper,\n  TextField,\n  Button,\n  ListItemSecondaryAction,\n  ListItem,\n  Grid\n} from \"@material-ui/core\";\n\nimport { green } from \"@material-ui/core/colors\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction TodoForm({ addTodo }) {\n  const [category, setCategory] = useState(\"Others\");\n  const [value, handleChange, reset] = useInputState(\"\");\n  const [isAdding, toggle] = useToggleState(false);\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const date = selectedDate.toLocaleString(\"fr-FR\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value, category, date);\n    reset();\n    toggle();\n  };\n  const handleChangeCat = value => {\n    setCategory(value);\n  };\n  return (\n    <ListItem>\n      {isAdding ? (\n        <Grid container justify=\"center\">\n          <form>\n            <Category\n              value={value}\n              valueChange={handleChange}\n              setCategory={handleChangeCat}\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <div className=\"pickers\">\n                <DatePicker value={selectedDate} onChange={handleDateChange} />\n                <TimePicker value={selectedDate} onChange={handleDateChange} />\n              </div>\n            </MuiPickersUtilsProvider>\n            {/* <ListItemSecondaryAction> */}\n            <Grid container style={{ marginTop: \"1.2rem\" }} justify=\"flex-end\">\n              <Button\n                onClick={handleSubmit}\n                variant=\"outlined\"\n                style={{\n                  color: green[500],\n                  borderColor: green[500],\n                  fontWeight: \"bolder\"\n                }}\n              >\n                Add Task\n              </Button>\n              <Button onClick={toggle}>Cancel</Button>\n            </Grid>\n            {/* </ListItemSecondaryAction> */}\n          </form>\n        </Grid>\n      ) : (\n        <Button onClick={toggle} style={{ padding: \"1rem\" }}>\n          <AddIcon style={{ padding: \"1rem\" }} />\n          Add task\n        </Button>\n      )}\n    </ListItem>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}