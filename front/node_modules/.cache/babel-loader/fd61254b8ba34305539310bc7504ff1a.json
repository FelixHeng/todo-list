{"ast":null,"code":"import _objectSpread from \"/home/wilder/Projects/todo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/wilder/Projects/todo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/src/components/TodoApp.js\";\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport useTodoState from \"../hooks/useTodoState\";\nimport { Paper } from \"@material-ui/core\";\nimport uuid from \"uuid/v4\";\n\nfunction TodoApp() {\n  const initialTodos = [{\n    id: 1,\n    task: \"Wash car\",\n    category: \"social\",\n    date: \"yesterday,\",\n    completed: false\n  }, {\n    id: 2,\n    task: \"Buy a New pc\",\n    category: \"personal\",\n    date: \"today\",\n    completed: false\n  }, {\n    id: 3,\n    task: \"Learn chinese\",\n    category: \"reading\",\n    date: \"tomorrow\",\n    completed: false\n  }];\n\n  const _useState = useState(initialTodos),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const addTodo = (newTodoText, newCategory, newDate) => {\n    setTodos([...todos, {\n      id: uuid(),\n      task: newTodoText,\n      category: newCategory,\n      date: newDate,\n      completed: false\n    }]);\n  };\n\n  const removeTodo = todoId => {\n    // filter out removed todo\n    const updatedTodos = todos.filter(todo => todo.id !== todoId); // call setTodos with new todos array\n\n    setTodos(updatedTodos);\n  };\n\n  const toggleTodo = todoId => {\n    const updatedTodos = todos.map(todo => todo.id === todoId ? _objectSpread({}, todo, {\n      completed: !todo.completed\n    }) : todo);\n    setTodos(updatedTodos);\n  };\n\n  const editTodo = (todoId, newTask, newCategory, newDate) => {\n    const updatedTodos = todos.map(todo => todo.id === todoId ? _objectSpread({}, todo, {\n      task: newTask,\n      category: newCategory,\n      date: newDate\n    }) : todo);\n    setTodos(updatedTodos);\n  };\n\n  return React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(TodoList, {\n    todos: todos,\n    removeTodo: removeTodo,\n    toggleTodo: toggleTodo,\n    editTodo: editTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n  setTodos();\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/home/wilder/Projects/todo/src/components/TodoApp.js"],"names":["React","useState","TodoForm","TodoList","useTodoState","Paper","uuid","TodoApp","initialTodos","id","task","category","date","completed","todos","setTodos","addTodo","newTodoText","newCategory","newDate","removeTodo","todoId","updatedTodos","filter","todo","toggleTodo","map","editTodo","newTask"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport useTodoState from \"../hooks/useTodoState\";\n\nimport { Paper } from \"@material-ui/core\";\nimport uuid from \"uuid/v4\";\n\nfunction TodoApp() {\n  const initialTodos = [\n    {\n      id: 1,\n      task: \"Wash car\",\n      category: \"social\",\n      date: \"yesterday,\",\n      completed: false\n    },\n    {\n      id: 2,\n      task: \"Buy a New pc\",\n      category: \"personal\",\n      date: \"today\",\n      completed: false\n    },\n    {\n      id: 3,\n      task: \"Learn chinese\",\n      category: \"reading\",\n      date: \"tomorrow\",\n      completed: false\n    }\n  ];\n  const [todos, setTodos] = useState(initialTodos);\n  const addTodo = (newTodoText, newCategory, newDate) => {\n    setTodos([\n      ...todos,\n      {\n        id: uuid(),\n        task: newTodoText,\n        category: newCategory,\n        date: newDate,\n        completed: false\n      }\n    ]);\n  };\n\n  const removeTodo = todoId => {\n    // filter out removed todo\n    const updatedTodos = todos.filter(todo => todo.id !== todoId);\n    // call setTodos with new todos array\n    setTodos(updatedTodos);\n  };\n\n  const toggleTodo = todoId => {\n    const updatedTodos = todos.map(todo =>\n      todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n    );\n    setTodos(updatedTodos);\n  };\n\n  const editTodo = (todoId, newTask, newCategory, newDate) => {\n    const updatedTodos = todos.map(todo =>\n      todo.id === todoId\n        ? { ...todo, task: newTask, category: newCategory, date: newDate }\n        : todo\n    );\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <Paper>\n      <TodoForm addTodo={addTodo} />\n      <TodoList\n        todos={todos}\n        removeTodo={removeTodo}\n        toggleTodo={toggleTodo}\n        editTodo={editTodo}\n      />\n    </Paper>\n  );\n  setTodos();\n}\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}