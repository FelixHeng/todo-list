{"ast":null,"code":"import _slicedToArray from \"/home/wilder/Projects/todo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/src/components/TodoForm.js\";\nimport React from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport { Paper, TextField, Button, ListItemSecondaryAction } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction TodoForm({\n  addTodo\n}) {\n  const _useInputState = useInputState(\"\"),\n        _useInputState2 = _slicedToArray(_useInputState, 3),\n        value = _useInputState2[0],\n        handleChange = _useInputState2[1],\n        reset = _useInputState2[2];\n\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isAdding = _useToggleState2[0],\n        toggle = _useToggleState2[1];\n\n  return React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, isAdding ? React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      if (!value) return;\n      addTodo(value);\n      reset();\n      toggle();\n    },\n    style: {\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: value,\n    onChange: handleChange,\n    label: \"Add new todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"date\",\n    label: \"Schedule\",\n    type: \"date\",\n    defaultValue: \"2020-01-01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(ListItemSecondaryAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      if (!value) return;\n      addTodo(value);\n      reset();\n      toggle();\n    },\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Add Task\"), React.createElement(Button, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Cancel\"))) : React.createElement(Button, {\n    onClick: toggle,\n    style: {\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    style: {\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), \"Add task\"));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/home/wilder/Projects/todo/src/components/TodoForm.js"],"names":["React","useInputState","useToggleState","Paper","TextField","Button","ListItemSecondaryAction","AddIcon","TodoForm","addTodo","value","handleChange","reset","isAdding","toggle","e","preventDefault","padding"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,SACEC,KADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,uBAJF,QAKO,mBALP;AAMA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAAA,yBACQR,aAAa,CAAC,EAAD,CADrB;AAAA;AAAA,QACtBS,KADsB;AAAA,QACfC,YADe;AAAA,QACDC,KADC;;AAAA,0BAEFV,cAAc,CAAC,KAAD,CAFZ;AAAA;AAAA,QAEtBW,QAFsB;AAAA,QAEZC,MAFY;;AAG7B,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,GACP;AACE,IAAA,QAAQ,EAAEE,CAAC,IAAI;AACbA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAI,CAACN,KAAL,EAAY;AACZD,MAAAA,OAAO,CAACC,KAAD,CAAP;AACAE,MAAAA,KAAK;AACLE,MAAAA,MAAM;AACP,KAPH;AAQE,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEP,KADT;AAEE,IAAA,QAAQ,EAAEC,YAFZ;AAGE,IAAA,KAAK,EAAC,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAeE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,YAAY,EAAC,YAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAqBE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAI,CAACD,KAAL,EAAY;AACZD,MAAAA,OAAO,CAACC,KAAD,CAAP;AACAE,MAAAA,KAAK;AACLE,MAAAA,MAAM;AACP,KANH;AAOE,IAAA,OAAO,EAAC,WAPV;AAQE,IAAA,KAAK,EAAC,WARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAaE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,CArBF,CADO,GAuCP,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,MAAjB;AAAyB,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,aAxCJ,CADF;AAgDD;;AAED,eAAeT,QAAf","sourcesContent":["import React from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\n\nimport {\n  Paper,\n  TextField,\n  Button,\n  ListItemSecondaryAction\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction TodoForm({ addTodo }) {\n  const [value, handleChange, reset] = useInputState(\"\");\n  const [isAdding, toggle] = useToggleState(false);\n  return (\n    <Paper>\n      {isAdding ? (\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            if (!value) return;\n            addTodo(value);\n            reset();\n            toggle();\n          }}\n          style={{ padding: \"1rem\" }}\n        >\n          <TextField\n            value={value}\n            onChange={handleChange}\n            label=\"Add new todo\"\n          />\n          <TextField\n            id=\"date\"\n            label=\"Schedule\"\n            type=\"date\"\n            defaultValue=\"2020-01-01\"\n          />\n          <ListItemSecondaryAction>\n            <Button\n              onClick={() => {\n                if (!value) return;\n                addTodo(value);\n                reset();\n                toggle();\n              }}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Add Task\n            </Button>\n            <Button onClick={toggle}>Cancel</Button>\n          </ListItemSecondaryAction>\n        </form>\n      ) : (\n        <Button onClick={toggle} style={{ padding: \"1rem\" }}>\n          <AddIcon style={{ padding: \"1rem\" }} />\n          Add task\n        </Button>\n      )}\n    </Paper>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}