{"ast":null,"code":"import _objectSpread from \"/home/wilder/Projects/todo/front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/wilder/Projects/todo/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/front/src/screens/AllTasks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport TodoBar from \"../components/common/TodoBar\";\nimport TodoList from \"../components/TodoList\";\nimport TodoItem from \"../components/TodoItem\";\nimport Task from \"../components/Task\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Grid, Checkbox, ListItemText, List, Box, makeStyles, IconButton } from \"@material-ui/core/\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport axios from \"axios\";\n\nfunction AllTasks() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        all = _useState2[0],\n        setAll = _useState2[1];\n\n  const _useState3 = useState(localStorage.getItem(\"id\")),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userId = _useState4[0],\n        setUserId = _useState4[1];\n\n  const useStyles = makeStyles({\n    category: {\n      // background: catColors,\n      border: 0,\n      borderRadius: 3,\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      color: \"white\",\n      pointerEvents: \"none\" // textTransform: \"none\"\n\n    }\n  });\n  const classes = useStyles();\n\n  const removeTodo = todoId => {\n    const updatedAll = all.filter(todo => todo.id !== todoId);\n    setAll(updatedAll);\n  };\n\n  const toggleTodo = todoId => {\n    const updatedAll = all.map(todo => todo.id === todoId ? _objectSpread({}, todo, {\n      completed: !todo.completed\n    }) : todo);\n    setAll(updatedAll);\n  };\n\n  const editTodo = (todoId, newTask, newCategory, newDate, newUserId) => {\n    const updatedAll = all.map(todo => todo.id === todoId ? _objectSpread({}, todo, {\n      task: newTask,\n      category: newCategory,\n      date: newDate,\n      userId: newUserId\n    }) : todo);\n    setAll(updatedAll);\n  };\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/todo/${userId}/all`).then(res => setAll(res.data), res => console.log(\"get res\", res.data));\n  }, []);\n  console.log(all);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(TodoBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), \"All your Tasks\", React.createElement(Button, {\n    component: Link,\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Go back to Home\"), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, all.map(todo => React.createElement(Task, {\n    task: todo.task,\n    date: todo.todo_at,\n    category: todo.categories_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    md: 8,\n    lg: 5,\n    style: {\n      marginTop: \"2rem\",\n      alignContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    style: {\n      textDecoration: completed ? \"line-through\" : \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Box, {\n    flexGrow: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    tabIndex: -1,\n    checked: completed,\n    onClick: () => toggleTodo(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"work\")), React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    onClick: () => removeTodo(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    style: {\n      marginLeft: \"0.7rem\",\n      width: \"80%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Wash my car\"), React.createElement(Box, {\n    style: {\n      marginLeft: \"0.7rem\",\n      marginTop: \"0.3rem\",\n      width: \"45%\",\n      padding: \"0.3rem\"\n    },\n    border: 1,\n    borderRadius: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Le Vendredi 5 janvier \\xE0 14h30\"))))));\n}\n\nexport default AllTasks;","map":{"version":3,"sources":["/home/wilder/Projects/todo/front/src/screens/AllTasks.js"],"names":["React","useState","useEffect","TodoBar","TodoList","TodoItem","Task","Link","Button","Grid","Checkbox","ListItemText","List","Box","makeStyles","IconButton","DeleteIcon","EditIcon","axios","AllTasks","all","setAll","localStorage","getItem","userId","setUserId","useStyles","category","border","borderRadius","boxShadow","color","pointerEvents","classes","removeTodo","todoId","updatedAll","filter","todo","id","toggleTodo","map","completed","editTodo","newTask","newCategory","newDate","newUserId","task","date","get","then","res","data","console","log","todo_at","categories_id","marginTop","alignContent","textDecoration","display","marginLeft","width","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,IALF,EAMEC,GANF,EAOEC,UAPF,EAQEC,UARF,QASO,oBATP;AAUA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GAAoB;AAAA,oBACIlB,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,QACXmB,GADW;AAAA,QACNC,MADM;;AAAA,qBAEUpB,QAAQ,CAACqB,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAD,CAFlB;AAAA;AAAA,QAEXC,MAFW;AAAA,QAEHC,SAFG;;AAIlB,QAAMC,SAAS,GAAGZ,UAAU,CAAC;AAC3Ba,IAAAA,QAAQ,EAAE;AACR;AACAC,MAAAA,MAAM,EAAE,CAFA;AAGRC,MAAAA,YAAY,EAAE,CAHN;AAIRC,MAAAA,SAAS,EAAE,uCAJH;AAKRC,MAAAA,KAAK,EAAE,OALC;AAMRC,MAAAA,aAAa,EAAE,MANP,CAOR;;AAPQ;AADiB,GAAD,CAA5B;AAWA,QAAMC,OAAO,GAAGP,SAAS,EAAzB;;AAEA,QAAMQ,UAAU,GAAGC,MAAM,IAAI;AAC3B,UAAMC,UAAU,GAAGhB,GAAG,CAACiB,MAAJ,CAAWC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAA/B,CAAnB;AACAd,IAAAA,MAAM,CAACe,UAAD,CAAN;AACD,GAHD;;AAKA,QAAMI,UAAU,GAAGL,MAAM,IAAI;AAC3B,UAAMC,UAAU,GAAGhB,GAAG,CAACqB,GAAJ,CAAQH,IAAI,IAC7BA,IAAI,CAACC,EAAL,KAAYJ,MAAZ,qBAA0BG,IAA1B;AAAgCI,MAAAA,SAAS,EAAE,CAACJ,IAAI,CAACI;AAAjD,SAA+DJ,IAD9C,CAAnB;AAGAjB,IAAAA,MAAM,CAACe,UAAD,CAAN;AACD,GALD;;AAOA,QAAMO,QAAQ,GAAG,CAACR,MAAD,EAASS,OAAT,EAAkBC,WAAlB,EAA+BC,OAA/B,EAAwCC,SAAxC,KAAsD;AACrE,UAAMX,UAAU,GAAGhB,GAAG,CAACqB,GAAJ,CAAQH,IAAI,IAC7BA,IAAI,CAACC,EAAL,KAAYJ,MAAZ,qBAESG,IAFT;AAGMU,MAAAA,IAAI,EAAEJ,OAHZ;AAIMjB,MAAAA,QAAQ,EAAEkB,WAJhB;AAKMI,MAAAA,IAAI,EAAEH,OALZ;AAMMtB,MAAAA,MAAM,EAAEuB;AANd,SAQIT,IATa,CAAnB;AAWAjB,IAAAA,MAAM,CAACe,UAAD,CAAN;AACD,GAbD;;AAeAlC,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAACgC,GAAN,CAAW,8BAA6B1B,MAAO,MAA/C,EAAsD2B,IAAtD,CACEC,GAAG,IAAI/B,MAAM,CAAC+B,GAAG,CAACC,IAAL,CADf,EAEED,GAAG,IAAIE,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,GAAG,CAACC,IAA3B,CAFT;AAID,GALQ,EAKN,EALM,CAAT;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYnC,GAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,oBAGE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEb,IAAnB;AAAyB,IAAA,EAAE,EAAE,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,EAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGa,GAAG,CAACqB,GAAJ,CAAQH,IAAI,IACX,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEA,IAAI,CAACU,IADb;AAEE,IAAA,IAAI,EAAEV,IAAI,CAACkB,OAFb;AAGE,IAAA,QAAQ,EAAElB,IAAI,CAACmB,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAQE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,EAAE,EAAE,CAJN;AAKE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,YAAY,EAAE;AAAnC,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,cAAc,EAAElB,SAAS,GAAG,cAAH,GAAoB;AADxC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEmB,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAE,CAAC,CADb;AAEE,IAAA,OAAO,EAAEnB,SAFX;AAGE,IAAA,OAAO,EAAE,MAAMF,UAAU,EAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEP,OAAO,CAACN,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,CADF,EASE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,cAAc,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,kBAAW,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,UAAD;AAAY,kBAAW,QAAvB;AAAgC,IAAA,OAAO,EAAE,MAAMO,UAAU,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CATF,CALF,EAuBE;AAAK,IAAA,KAAK,EAAE;AAAE4B,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAvBF,EA0BE,oBAAC,GAAD;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,UAAU,EAAE,QADP;AAELJ,MAAAA,SAAS,EAAE,QAFN;AAGLK,MAAAA,KAAK,EAAE,KAHF;AAILC,MAAAA,OAAO,EAAE;AAJJ,KADT;AAOE,IAAA,MAAM,EAAE,CAPV;AAQE,IAAA,YAAY,EAAE,EARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCA1BF,CAPF,CARF,CADF,CANF,CADF;AAqED;;AAED,eAAe7C,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TodoBar from \"../components/common/TodoBar\";\nimport TodoList from \"../components/TodoList\";\nimport TodoItem from \"../components/TodoItem\";\nimport Task from \"../components/Task\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Grid,\n  Checkbox,\n  ListItemText,\n  List,\n  Box,\n  makeStyles,\n  IconButton\n} from \"@material-ui/core/\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport axios from \"axios\";\n\nfunction AllTasks() {\n  const [all, setAll] = useState([]);\n  const [userId, setUserId] = useState(localStorage.getItem(\"id\"));\n\n  const useStyles = makeStyles({\n    category: {\n      // background: catColors,\n      border: 0,\n      borderRadius: 3,\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      color: \"white\",\n      pointerEvents: \"none\"\n      // textTransform: \"none\"\n    }\n  });\n  const classes = useStyles();\n\n  const removeTodo = todoId => {\n    const updatedAll = all.filter(todo => todo.id !== todoId);\n    setAll(updatedAll);\n  };\n\n  const toggleTodo = todoId => {\n    const updatedAll = all.map(todo =>\n      todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n    );\n    setAll(updatedAll);\n  };\n\n  const editTodo = (todoId, newTask, newCategory, newDate, newUserId) => {\n    const updatedAll = all.map(todo =>\n      todo.id === todoId\n        ? {\n            ...todo,\n            task: newTask,\n            category: newCategory,\n            date: newDate,\n            userId: newUserId\n          }\n        : todo\n    );\n    setAll(updatedAll);\n  };\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/todo/${userId}/all`).then(\n      res => setAll(res.data),\n      res => console.log(\"get res\", res.data)\n    );\n  }, []);\n  console.log(all);\n\n  return (\n    <div>\n      <TodoBar />\n      All your Tasks\n      <Button component={Link} to={\"/\"}>\n        Go back to Home\n      </Button>\n      <List>\n        <div>\n          {all.map(todo => (\n            <Task\n              task={todo.task}\n              date={todo.todo_at}\n              category={todo.categories_id}\n            />\n          ))}\n          <Grid\n            item\n            xs={10}\n            md={8}\n            lg={5}\n            style={{ marginTop: \"2rem\", alignContent: \"center\" }}\n          >\n            <ListItemText\n              style={{\n                textDecoration: completed ? \"line-through\" : \"none\"\n              }}\n            >\n              <Box style={{ display: \"flex\" }}>\n                <Box flexGrow={1}>\n                  <Checkbox\n                    tabIndex={-1}\n                    checked={completed}\n                    onClick={() => toggleTodo()}\n                  />\n                  <Button className={classes.category}>work</Button>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                  <IconButton aria-label=\"Edit\">\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton aria-label=\"Delete\" onClick={() => removeTodo()}>\n                    <DeleteIcon />\n                  </IconButton>\n                </Box>\n              </Box>\n              <div style={{ marginLeft: \"0.7rem\", width: \"80%\" }}>\n                Wash my car\n              </div>\n              <Box\n                style={{\n                  marginLeft: \"0.7rem\",\n                  marginTop: \"0.3rem\",\n                  width: \"45%\",\n                  padding: \"0.3rem\"\n                }}\n                border={1}\n                borderRadius={10}\n              >\n                Le Vendredi 5 janvier à 14h30\n              </Box>\n              {/* <ListItemSecondaryAction> */}\n              {/* </ListItemSecondaryAction> */}\n            </ListItemText>\n          </Grid>\n        </div>\n      </List>\n    </div>\n  );\n}\n\nexport default AllTasks;\n"]},"metadata":{},"sourceType":"module"}