{"ast":null,"code":"import _slicedToArray from \"/home/wilder/Projects/todo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/src/components/EditTodoForm.js\";\nimport React from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport { TextField } from \"@material-ui/core\";\n\nfunction EditTodoForm({\n  editTodo\n}) {\n  const _useInputState = useInputState(\"\"),\n        _useInputState2 = _slicedToArray(_useInputState, 3),\n        value = _useInputState2[0],\n        handleChange = _useInputState2[1],\n        reset = _useInputState2[2];\n\n  return React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      editTodo(id, value);\n      reset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), \";\");\n}\n\nexport default EditTodoForm;","map":{"version":3,"sources":["/home/wilder/Projects/todo/src/components/EditTodoForm.js"],"names":["React","useInputState","TextField","EditTodoForm","editTodo","value","handleChange","reset","e","preventDefault","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA,yBACGH,aAAa,CAAC,EAAD,CADhB;AAAA;AAAA,QAC3BI,KAD2B;AAAA,QACpBC,YADoB;AAAA,QACNC,KADM;;AAElC,SACE;AACE,IAAA,QAAQ,EAAEC,CAAC,IAAI;AACbA,MAAAA,CAAC,CAACC,cAAF;AACAL,MAAAA,QAAQ,CAACM,EAAD,EAAKL,KAAL,CAAR;AACAE,MAAAA,KAAK;AACN,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,KAAlB;AAAyB,IAAA,QAAQ,EAAEC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,MADF;AAWD;;AAED,eAAeH,YAAf","sourcesContent":["import React from \"react\";\nimport useInputState from \"../hooks/useInputState\";\n\nimport { TextField } from \"@material-ui/core\";\n\nfunction EditTodoForm({ editTodo }) {\n  const [value, handleChange, reset] = useInputState(\"\");\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        editTodo(id, value);\n        reset();\n      }}\n    >\n      <TextField value={value} onChange={handleChange} />;\n    </form>\n  );\n}\n\nexport default EditTodoForm;\n"]},"metadata":{},"sourceType":"module"}