{"ast":null,"code":"import _slicedToArray from \"/home/wilder/Projects/todo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/src/components/TodoForm.js\";\nimport React, { useState } from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport Category from \"./Category\"; //npm install date-fns@next @date-io/date-fns\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\";\nimport { MuiPickersUtilsProvider, DatePicker, TimePicker, DateTimePicker } from \"@material-ui/pickers\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { Paper, TextField, Button, ListItemSecondaryAction, ListItem } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", '\"Segoe UI\"', \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction TodoForm({\n  addTodo\n}) {\n  const _useInputState = useInputState(\"\"),\n        _useInputState2 = _slicedToArray(_useInputState, 3),\n        value = _useInputState2[0],\n        handleChange = _useInputState2[1],\n        reset = _useInputState2[2];\n\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isAdding = _useToggleState2[0],\n        toggle = _useToggleState2[1];\n\n  const _useState = useState(new Date()),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedDate = _useState2[0],\n        handleDateChange = _useState2[1];\n\n  const date = selectedDate.toLocaleString(\"fr-FR\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value, date);\n    reset();\n    toggle();\n  };\n\n  return React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, isAdding ? React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      if (!value) return;\n      addTodo(value, date);\n      reset();\n      toggle();\n    },\n    style: {\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-customized-textbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Todo\"), React.createElement(BootstrapInput, {\n    id: \"demo-customized-textbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-customized-select-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Category\"), React.createElement(NativeSelect, {\n    id: \"demo-customized-select-native\",\n    value: state,\n    onChange: handleChange,\n    input: React.createElement(BootstrapInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Work\"), React.createElement(\"option\", {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Personal\"), React.createElement(\"option\", {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Social\"), React.createElement(\"option\", {\n    value: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Reading\"), React.createElement(\"option\", {\n    value: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Life Goals\"), React.createElement(\"option\", {\n    value: 60,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Others\")))), React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pickers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    value: selectedDate,\n    onChange: handleDateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(TimePicker, {\n    value: selectedDate,\n    onChange: handleDateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }))), React.createElement(ListItemSecondaryAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleSubmit,\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Add Task\"), React.createElement(Button, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Cancel\"))) : React.createElement(Button, {\n    onClick: toggle,\n    style: {\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    style: {\n      padding: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), \"Add task\"));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/home/wilder/Projects/todo/src/components/TodoForm.js"],"names":["React","useState","useInputState","useToggleState","Category","DateFnsUtils","format","MuiPickersUtilsProvider","DatePicker","TimePicker","DateTimePicker","makeStyles","withStyles","InputLabel","MenuItem","FormControl","Select","NativeSelect","InputBase","Paper","TextField","Button","ListItemSecondaryAction","ListItem","AddIcon","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","useStyles","margin","TodoForm","addTodo","value","handleChange","reset","isAdding","toggle","Date","selectedDate","handleDateChange","date","toLocaleString","weekday","year","month","day","hour","minute","handleSubmit","e","preventDefault","classes","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport Category from \"./Category\";\n//npm install date-fns@next @date-io/date-fns\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker,\n  TimePicker,\n  DateTimePicker\n} from \"@material-ui/pickers\";\n\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport {\n  Paper,\n  TextField,\n  Button,\n  ListItemSecondaryAction,\n  ListItem\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  }\n}))(InputBase);\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction TodoForm({ addTodo }) {\n  const [value, handleChange, reset] = useInputState(\"\");\n  const [isAdding, toggle] = useToggleState(false);\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const date = selectedDate.toLocaleString(\"fr-FR\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value, date);\n    reset();\n    toggle();\n  };\n  return (\n    <ListItem>\n      {isAdding ? (\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            if (!value) return;\n            addTodo(value, date);\n            reset();\n            toggle();\n          }}\n          style={{ padding: \"1rem\" }}\n        >\n          {/* <Category value={value} onChange={handleChange} /> */}\n          <div>\n            <FormControl className={classes.margin}>\n              <InputLabel htmlFor=\"demo-customized-textbox\">Todo</InputLabel>\n              <BootstrapInput id=\"demo-customized-textbox\" />\n            </FormControl>\n            <FormControl className={classes.margin}>\n              <InputLabel htmlFor=\"demo-customized-select-native\">\n                Category\n              </InputLabel>\n              <NativeSelect\n                id=\"demo-customized-select-native\"\n                value={state}\n                onChange={handleChange}\n                input={<BootstrapInput />}\n              >\n                <option value=\"\" />\n                <option value={10}>Work</option>\n                <option value={20}>Personal</option>\n                <option value={30}>Social</option>\n                <option value={40}>Reading</option>\n                <option value={50}>Life Goals</option>\n                <option value={60}>Others</option>\n              </NativeSelect>\n            </FormControl>\n          </div>\n\n          {/* <TextField\n            value={value}\n            onChange={handleChange}\n            label=\"Add new todo\"\n          /> */}\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <div className=\"pickers\">\n              <DatePicker value={selectedDate} onChange={handleDateChange} />\n              <TimePicker value={selectedDate} onChange={handleDateChange} />\n              {/* <DateTimePicker value={selectedDate} onChange={handleDateChange} /> */}\n            </div>\n          </MuiPickersUtilsProvider>\n          <ListItemSecondaryAction>\n            <Button\n              onClick={handleSubmit}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Add Task\n            </Button>\n            <Button onClick={toggle}>Cancel</Button>\n          </ListItemSecondaryAction>\n        </form>\n      ) : (\n        <Button onClick={toggle} style={{ padding: \"1rem\" }}>\n          <AddIcon style={{ padding: \"1rem\" }} />\n          Add task\n        </Button>\n      )}\n    </ListItem>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}