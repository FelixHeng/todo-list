{"ast":null,"code":"import _slicedToArray from \"/home/wilder/Projects/todo/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/front/src/components/Task.js\";\nimport React, { useState } from \"react\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport EditTodoForm from \"../components/EditTodoForm\";\nimport { ListItem, ListItemText, Checkbox, IconButton, makeStyles, Button, Box, Grid } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction Todo({\n  id,\n  task,\n  category,\n  date,\n  userId,\n  completed,\n  removeTodo,\n  editTodo\n}) {\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isEditing = _useToggleState2[0],\n        toggle = _useToggleState2[1];\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        done = _useState2[0],\n        setDone = _useState2[1];\n\n  const workColors = \"#3498DB\";\n  const personalColors = \"#E74C3C\";\n  const socialColors = \"#1ABC9C\";\n  const readingColors = \"#873600\";\n  const lifeColors = \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\";\n  const othersColors = \"#717D7E\";\n  let catColors = othersColors;\n\n  if (category === \"Work\") {\n    catColors = workColors;\n  } else if (category === \"Personal\") {\n    catColors = personalColors;\n  } else if (category === \"Social\") {\n    catColors = socialColors;\n  } else if (category === \"Reading\") {\n    catColors = readingColors;\n  } else if (category === \"Life Goals\") {\n    catColors = lifeColors;\n  } else if (category === \"Others\") {\n    catColors = othersColors;\n  }\n\n  const useStyles = makeStyles({\n    category: {\n      background: catColors,\n      border: 0,\n      borderRadius: 3,\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      color: \"white\",\n      pointerEvents: \"none\"\n    }\n  });\n  const classes = useStyles();\n  return (// <Grid container justify=\"center\">\n    //   <Grid\n    //     item\n    //     xs={10}\n    //     md={8}\n    //     lg={5}\n    //     style={{ marginTop: \"0.5rem\", alignContent: \"center\" }}\n    //   >\n    React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, isEditing ? React.createElement(EditTodoForm, {\n      editTodo: editTodo,\n      id: id,\n      task: task,\n      category: category,\n      date: date,\n      userId: userId,\n      toggleEditForm: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }) : // <Box border={1} borderRadius={10} style={{ backgroundColor: \"white\" }}>\n    React.createElement(React.Fragment, null, React.createElement(ListItemText, {\n      style: {\n        textDecoration: done ? \"line-through\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Box, {\n      style: {\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Box, {\n      flexGrow: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      tabIndex: -1,\n      checked: completed,\n      onClick: () => setDone(!done),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: classes.category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, category)), React.createElement(Box, {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"Edit\",\n      onClick: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(IconButton, {\n      \"aria-label\": \"Delete\",\n      onClick: () => removeTodo(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        marginLeft: \"0.7rem\",\n        width: \"80%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, task), React.createElement(Box, {\n      style: {\n        marginLeft: \"0.7rem\",\n        marginTop: \"0.3rem\",\n        width: \"45%\",\n        padding: \"0.3rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, date, userId)))) //   </Grid>\n    // </Grid>\n\n  );\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/wilder/Projects/todo/front/src/components/Task.js"],"names":["React","useState","useToggleState","EditTodoForm","ListItem","ListItemText","Checkbox","IconButton","makeStyles","Button","Box","Grid","DeleteIcon","EditIcon","Todo","id","task","category","date","userId","completed","removeTodo","editTodo","isEditing","toggle","done","setDone","workColors","personalColors","socialColors","readingColors","lifeColors","othersColors","catColors","useStyles","background","border","borderRadius","boxShadow","color","pointerEvents","classes","textDecoration","display","marginLeft","width","marginTop","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport EditTodoForm from \"../components/EditTodoForm\";\n\nimport {\n  ListItem,\n  ListItemText,\n  Checkbox,\n  IconButton,\n  makeStyles,\n  Button,\n  Box,\n  Grid\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction Todo({\n  id,\n  task,\n  category,\n  date,\n  userId,\n  completed,\n  removeTodo,\n  editTodo\n}) {\n  const [isEditing, toggle] = useToggleState(false);\n  const [done, setDone] = useState(false);\n  const workColors = \"#3498DB\";\n  const personalColors = \"#E74C3C\";\n  const socialColors = \"#1ABC9C\";\n  const readingColors = \"#873600\";\n  const lifeColors = \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\";\n  const othersColors = \"#717D7E\";\n\n  let catColors = othersColors;\n  if (category === \"Work\") {\n    catColors = workColors;\n  } else if (category === \"Personal\") {\n    catColors = personalColors;\n  } else if (category === \"Social\") {\n    catColors = socialColors;\n  } else if (category === \"Reading\") {\n    catColors = readingColors;\n  } else if (category === \"Life Goals\") {\n    catColors = lifeColors;\n  } else if (category === \"Others\") {\n    catColors = othersColors;\n  }\n\n  const useStyles = makeStyles({\n    category: {\n      background: catColors,\n      border: 0,\n      borderRadius: 3,\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      color: \"white\",\n      pointerEvents: \"none\"\n    }\n  });\n  const classes = useStyles();\n  return (\n    // <Grid container justify=\"center\">\n    //   <Grid\n    //     item\n    //     xs={10}\n    //     md={8}\n    //     lg={5}\n    //     style={{ marginTop: \"0.5rem\", alignContent: \"center\" }}\n    //   >\n    <ListItem>\n      {isEditing ? (\n        <EditTodoForm\n          editTodo={editTodo}\n          id={id}\n          task={task}\n          category={category}\n          date={date}\n          userId={userId}\n          toggleEditForm={toggle}\n        />\n      ) : (\n        // <Box border={1} borderRadius={10} style={{ backgroundColor: \"white\" }}>\n        <>\n          <ListItemText\n            style={{\n              textDecoration: done ? \"line-through\" : \"none\"\n            }}\n          >\n            <Box style={{ display: \"flex\" }}>\n              <Box flexGrow={1}>\n                <Checkbox\n                  tabIndex={-1}\n                  checked={completed}\n                  onClick={() => setDone(!done)}\n                />\n                <Button className={classes.category}>{category}</Button>\n              </Box>\n              <Box display=\"flex\" justifyContent=\"flex-end\">\n                <IconButton aria-label=\"Edit\" onClick={toggle}>\n                  <EditIcon />\n                </IconButton>\n                <IconButton aria-label=\"Delete\" onClick={() => removeTodo(id)}>\n                  <DeleteIcon />\n                </IconButton>\n              </Box>\n            </Box>\n            <div style={{ marginLeft: \"0.7rem\", width: \"80%\" }}>{task}</div>\n            <Box\n              style={{\n                marginLeft: \"0.7rem\",\n                marginTop: \"0.3rem\",\n                width: \"45%\",\n                padding: \"0.3rem\"\n              }}\n            >\n              {date}\n              {userId}\n            </Box>\n            {/* <ListItemSecondaryAction> */}\n            {/* </ListItemSecondaryAction> */}\n          </ListItemText>\n          {/* </Box> */}\n        </>\n      )}\n    </ListItem>\n    //   </Grid>\n    // </Grid>\n  );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}