{"ast":null,"code":"import _slicedToArray from \"/home/wilder/Projects/todo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/src/components/TodoItem.js\";\nimport React from \"react\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport EditTodoForm from \"../components/EditTodoForm\";\nimport { ListItem, ListItemText, Checkbox, IconButton, ListItemSecondaryAction, makeStyles, Button } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction Todo({\n  id,\n  task,\n  category,\n  date,\n  completed,\n  removeTodo,\n  toggleTodo,\n  editTodo\n}) {\n  const _useToggleState = useToggleState(false),\n        _useToggleState2 = _slicedToArray(_useToggleState, 2),\n        isEditing = _useToggleState2[0],\n        toggle = _useToggleState2[1];\n\n  const workColors = \"#3498DB\";\n  const personalColors = \"#E74C3C\";\n  const socialColors = \"#1ABC9C\";\n  const readingColors = \"#873600\";\n  const lifeColors = \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\";\n  const othersColors = \"#F1C40F\";\n  let catColors; // if (category === \"Work\") {\n  //   catColors = workColors;\n  // }\n\n  switch (catColors) {\n    case 1:\n      if (category === \"Work\") {\n        catColors = workColors;\n      }\n\n      break;\n\n    case 2:\n      if (category === \"Personal\") {\n        catColors = personalColors;\n      }\n\n      break;\n\n    case 3:\n      if (category === \"Social\") {\n        catColors = socialColors;\n      }\n\n      break;\n\n    case 4:\n      if (category === \"Reading\") {\n        catColors = readingColors;\n      }\n\n      break;\n\n    case 5:\n      if (category === \"Life Goals\") {\n        catColors = lifeColors;\n      }\n\n      break;\n\n    case 6:\n      if (category === \"Others\") {\n        catColors = othersColors;\n      }\n\n      break;\n  }\n\n  console.log(\"caaaat\", catColors);\n  console.log(\"value\", category);\n  const useStyles = makeStyles({\n    root: {\n      background: catColors,\n      border: 0,\n      borderRadius: 3,\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      color: \"white\"\n    }\n  });\n  const classes = useStyles(); // console.log(\"cateeee\", { category });\n  // console.log(\"daaate\", { date });\n\n  return React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, isEditing ? React.createElement(EditTodoForm, {\n    editTodo: editTodo,\n    id: id,\n    task: task,\n    category: category,\n    date: date,\n    toggleEditForm: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(Checkbox, {\n    tabIndex: -1,\n    checked: completed,\n    onClick: () => toggleTodo(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    style: {\n      textDecoration: completed ? \"line-through\" : \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, category), React.createElement(\"div\", {\n    style: {\n      width: \"80%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, task), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, date)), React.createElement(ListItemSecondaryAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    onClick: () => removeTodo(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    \"aria-label\": \"Edit\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })))));\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/wilder/Projects/todo/src/components/TodoItem.js"],"names":["React","useToggleState","EditTodoForm","ListItem","ListItemText","Checkbox","IconButton","ListItemSecondaryAction","makeStyles","Button","DeleteIcon","EditIcon","Todo","id","task","category","date","completed","removeTodo","toggleTodo","editTodo","isEditing","toggle","workColors","personalColors","socialColors","readingColors","lifeColors","othersColors","catColors","console","log","useStyles","root","background","border","borderRadius","boxShadow","color","classes","textDecoration","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport EditTodoForm from \"../components/EditTodoForm\";\n\nimport {\n  ListItem,\n  ListItemText,\n  Checkbox,\n  IconButton,\n  ListItemSecondaryAction,\n  makeStyles,\n  Button\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction Todo({\n  id,\n  task,\n  category,\n  date,\n  completed,\n  removeTodo,\n  toggleTodo,\n  editTodo\n}) {\n  const [isEditing, toggle] = useToggleState(false);\n  const workColors = \"#3498DB\";\n  const personalColors = \"#E74C3C\";\n  const socialColors = \"#1ABC9C\";\n  const readingColors = \"#873600\";\n  const lifeColors = \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\";\n  const othersColors = \"#F1C40F\";\n\n  let catColors;\n  // if (category === \"Work\") {\n  //   catColors = workColors;\n  // }\n  switch (catColors) {\n    case 1:\n      if (category === \"Work\") {\n        catColors = workColors;\n      }\n      break;\n    case 2:\n      if (category === \"Personal\") {\n        catColors = personalColors;\n      }\n      break;\n    case 3:\n      if (category === \"Social\") {\n        catColors = socialColors;\n      }\n      break;\n    case 4:\n      if (category === \"Reading\") {\n        catColors = readingColors;\n      }\n      break;\n    case 5:\n      if (category === \"Life Goals\") {\n        catColors = lifeColors;\n      }\n      break;\n    case 6:\n      if (category === \"Others\") {\n        catColors = othersColors;\n      }\n      break;\n  }\n\n  console.log(\"caaaat\", catColors);\n  console.log(\"value\", category);\n  const useStyles = makeStyles({\n    root: {\n      background: catColors,\n      border: 0,\n      borderRadius: 3,\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      color: \"white\"\n    }\n  });\n  const classes = useStyles();\n  // console.log(\"cateeee\", { category });\n  // console.log(\"daaate\", { date });\n  return (\n    <ListItem>\n      {isEditing ? (\n        <EditTodoForm\n          editTodo={editTodo}\n          id={id}\n          task={task}\n          category={category}\n          date={date}\n          toggleEditForm={toggle}\n        />\n      ) : (\n        <>\n          <Checkbox\n            tabIndex={-1}\n            checked={completed}\n            onClick={() => toggleTodo(id)}\n          />\n          <ListItemText\n            style={{\n              textDecoration: completed ? \"line-through\" : \"none\"\n            }}\n          >\n            <Button className={classes.root}>{category}</Button>\n            <div style={{ width: \"80%\" }}>{task}</div>\n            <div>{date}</div>\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton aria-label=\"Delete\" onClick={() => removeTodo(id)}>\n              <DeleteIcon />\n            </IconButton>\n            <IconButton aria-label=\"Edit\" onClick={toggle}>\n              <EditIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </>\n      )}\n    </ListItem>\n  );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}