{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Projects/todo/src/screens/Signup.js\";\nimport React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Snackbar, Slide, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport { green } from \"@material-ui/core/colors\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"enter your email\",\n      password: \"monPassword\",\n      passwordbis: \"monPassword\",\n      name: \"James\",\n      lastname: \"Bond\",\n      flash: \"Sign up\",\n      error: false,\n      open: false,\n      Transition: Slide\n    };\n\n    this.updateEmailField = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.updatePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.updatePasswordBis = event => {\n      this.setState({\n        passwordbis: event.target.value\n      });\n    };\n\n    this.updateName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.updateLastName = event => {\n      this.setState({\n        lastname: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      this.setState({\n        open: true\n      });\n      fetch(\"/auth/signup\", {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\"\n        }),\n        body: JSON.stringify(this.state)\n      }).then(res => res.json()).then(res => this.setState({\n        flash: res.flash\n      }), err => this.setState({\n        flash: err.flash\n      }));\n      event.preventDefault();\n      console.log(this.state);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Sign up\"), React.createElement(Snackbar, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      TransitionComponent: this.state.Transition,\n      ContentProps: {\n        \"aria-describedby\": \"message-id\"\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.flash),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      type: \"email\",\n      name: \"email\",\n      label: \"email\",\n      onChange: this.updateEmailField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      type: \"password\",\n      name: \"password\",\n      label: \"password\",\n      onChange: this.updatePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      type: \"password\",\n      name: \"passwordbis\",\n      label: \"confirm password\",\n      onChange: this.updatePasswordBis,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      type: \"text\",\n      name: \"name\",\n      label: \"name\",\n      onChange: this.updateName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      type: \"text\",\n      name: \"lastname\",\n      label: \"lastname\",\n      onChange: this.updateLastName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/\",\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Already an account ? \", React.createElement(Link, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \" Signin\")));\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/home/wilder/Projects/todo/src/screens/Signup.js"],"names":["React","Component","TextField","Button","Snackbar","Slide","IconButton","CloseIcon","SnackbarContent","green","CheckCircleIcon","ErrorIcon","Link","Signup","state","email","password","passwordbis","name","lastname","flash","error","open","Transition","updateEmailField","event","setState","target","value","updatePassword","updatePasswordBis","updateName","updateLastName","handleSubmit","fetch","method","headers","Headers","body","JSON","stringify","then","res","json","err","preventDefault","console","log","handleClose","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Snackbar, Slide, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport { green } from \"@material-ui/core/colors\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  state = {\n    email: \"enter your email\",\n    password: \"monPassword\",\n    passwordbis: \"monPassword\",\n    name: \"James\",\n    lastname: \"Bond\",\n    flash: \"Sign up\",\n    error: false,\n    open: false,\n    Transition: Slide\n  };\n\n  updateEmailField = event => {\n    this.setState({ email: event.target.value });\n  };\n\n  updatePassword = event => {\n    this.setState({ password: event.target.value });\n  };\n\n  updatePasswordBis = event => {\n    this.setState({ passwordbis: event.target.value });\n  };\n\n  updateName = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  updateLastName = event => {\n    this.setState({ lastname: event.target.value });\n  };\n\n  handleSubmit = event => {\n    this.setState({\n      open: true\n    });\n    fetch(\"/auth/signup\", {\n      method: \"POST\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify(this.state)\n    })\n      .then(res => res.json())\n      .then(\n        res => this.setState({ flash: res.flash }),\n        err => this.setState({ flash: err.flash })\n      );\n\n    event.preventDefault();\n    console.log(this.state);\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Sign up</h1>\n        <Snackbar\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={this.state.Transition}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">{this.state.flash}</span>}\n        />\n        {/* <SnackbarContent\n            onClose={this.handleClose}\n            message={\n              <span>\n                {this.state.error !== true ? (\n                  <CheckCircleIcon className=\"icon verticalAlign\" />\n                ) : (\n                  <ErrorIcon className=\"icon verticalAlign\" />\n                )}\n                <span className=\"verticalAlign\"> {this.state.flash} </span>\n                <IconButton\n                  key=\"close\"\n                  aria-label=\"close\"\n                  color=\"inherit\"\n                  onClick={this.handleClose}\n                  className=\"icon verticalAlign\"\n                >\n                  <CloseIcon />\n                </IconButton>\n              </span>\n            }\n            style={\n              this.state.error !== true\n                ? { backgroundColog: green[600] }\n                : { backgroundColor: \"red\" }\n            }\n          /> */}\n        {/* </Snackbar> */}\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            type=\"email\"\n            name=\"email\"\n            label=\"email\"\n            onChange={this.updateEmailField}\n          />\n          <br />\n          <br />\n          <TextField\n            type=\"password\"\n            name=\"password\"\n            label=\"password\"\n            onChange={this.updatePassword}\n          />\n          <br />\n          <br />\n          <TextField\n            type=\"password\"\n            name=\"passwordbis\"\n            label=\"confirm password\"\n            onChange={this.updatePasswordBis}\n          />\n          <br />\n          <br />\n          <TextField\n            type=\"text\"\n            name=\"name\"\n            label=\"name\"\n            onChange={this.updateName}\n          />\n          <br />\n          <br />\n          <TextField\n            type=\"text\"\n            name=\"lastname\"\n            label=\"lastname\"\n            onChange={this.updateLastName}\n          />\n          <br />\n          <br />\n          <Link\n            to={\"/\"}\n            type=\"submit\"\n            value=\"Submit\"\n            onClick={this.handleSubmit}\n          >\n            Submit\n          </Link>\n        </form>\n        <br />\n        <div>\n          Already an account ? <Link to={\"/signin\"}> Signin</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}