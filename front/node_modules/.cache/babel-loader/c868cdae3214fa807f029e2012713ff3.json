{"ast":null,"code":"import _objectSpread from \"/home/wilder/Projects/todo/front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/wilder/Projects/todo/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/Projects/todo/front/src/components/TodoApp.js\";\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport useTodoState from \"../hooks/useTodoState\";\nimport { Paper, Divider } from \"@material-ui/core\";\nimport uuid from \"uuid/v4\";\n\nfunction TodoApp() {\n  const initialTodos = [// {\n    //   id: 1,\n    //   task: \"Wash car\",\n    //   category: \"social\",\n    //   date: \"yesterday,\",\n    //   completed: false\n    // },\n    // {\n    //   id: 2,\n    //   task: \"Buy a New pc\",\n    //   category: \"personal\",\n    //   date: \"today\",\n    //   completed: false\n    // },\n    // {\n    //   id: 3,\n    //   task: \"Learn chinese\",\n    //   category: \"reading\",\n    //   date: \"tomorrow\",\n    //   completed: false\n    // }\n  ];\n\n  const _useState = useState(initialTodos),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const addTodo = (newTodoText, newCategory, newDate) => {\n    setTodos([...todos, {\n      id: uuid(),\n      category: newCategory,\n      task: newTodoText,\n      date: newDate,\n      completed: false\n    }]);\n  };\n\n  const removeTodo = todoId => {\n    const updatedTodos = todos.filter(todo => todo.id !== todoId);\n    setTodos(updatedTodos);\n  };\n\n  const toggleTodo = todoId => {\n    const updatedTodos = todos.map(todo => todo.id === todoId ? _objectSpread({}, todo, {\n      completed: !todo.completed\n    }) : todo);\n    setTodos(updatedTodos);\n  };\n\n  const editTodo = (todoId, newTask, newCategory, newDate) => {\n    const updatedTodos = todos.map(todo => todo.id === todoId ? _objectSpread({}, todo, {\n      task: newTask,\n      category: newCategory,\n      date: newDate\n    }) : todo);\n    setTodos(updatedTodos);\n  };\n\n  return React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(TodoList, {\n    todos: todos,\n    removeTodo: removeTodo,\n    toggleTodo: toggleTodo,\n    editTodo: editTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n  setTodos();\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/home/wilder/Projects/todo/front/src/components/TodoApp.js"],"names":["React","useState","TodoForm","TodoList","useTodoState","Paper","Divider","uuid","TodoApp","initialTodos","todos","setTodos","addTodo","newTodoText","newCategory","newDate","id","category","task","date","completed","removeTodo","todoId","updatedTodos","filter","todo","toggleTodo","map","editTodo","newTask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,mBAA/B;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAMC,YAAY,GAAG,CACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBmB,GAArB;;AADiB,oBAwBSR,QAAQ,CAACQ,YAAD,CAxBjB;AAAA;AAAA,QAwBVC,KAxBU;AAAA,QAwBHC,QAxBG;;AAyBjB,QAAMC,OAAO,GAAG,CAACC,WAAD,EAAcC,WAAd,EAA2BC,OAA3B,KAAuC;AACrDJ,IAAAA,QAAQ,CAAC,CACP,GAAGD,KADI,EAEP;AACEM,MAAAA,EAAE,EAAET,IAAI,EADV;AAEEU,MAAAA,QAAQ,EAAEH,WAFZ;AAGEI,MAAAA,IAAI,EAAEL,WAHR;AAIEM,MAAAA,IAAI,EAAEJ,OAJR;AAKEK,MAAAA,SAAS,EAAE;AALb,KAFO,CAAD,CAAR;AAUD,GAXD;;AAaA,QAAMC,UAAU,GAAGC,MAAM,IAAI;AAC3B,UAAMC,YAAY,GAAGb,KAAK,CAACc,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACT,EAAL,KAAYM,MAAjC,CAArB;AACAX,IAAAA,QAAQ,CAACY,YAAD,CAAR;AACD,GAHD;;AAKA,QAAMG,UAAU,GAAGJ,MAAM,IAAI;AAC3B,UAAMC,YAAY,GAAGb,KAAK,CAACiB,GAAN,CAAUF,IAAI,IACjCA,IAAI,CAACT,EAAL,KAAYM,MAAZ,qBAA0BG,IAA1B;AAAgCL,MAAAA,SAAS,EAAE,CAACK,IAAI,CAACL;AAAjD,SAA+DK,IAD5C,CAArB;AAGAd,IAAAA,QAAQ,CAACY,YAAD,CAAR;AACD,GALD;;AAOA,QAAMK,QAAQ,GAAG,CAACN,MAAD,EAASO,OAAT,EAAkBf,WAAlB,EAA+BC,OAA/B,KAA2C;AAC1D,UAAMQ,YAAY,GAAGb,KAAK,CAACiB,GAAN,CAAUF,IAAI,IACjCA,IAAI,CAACT,EAAL,KAAYM,MAAZ,qBACSG,IADT;AACeP,MAAAA,IAAI,EAAEW,OADrB;AAC8BZ,MAAAA,QAAQ,EAAEH,WADxC;AACqDK,MAAAA,IAAI,EAAEJ;AAD3D,SAEIU,IAHe,CAArB;AAKAd,IAAAA,QAAQ,CAACY,YAAD,CAAR;AACD,GAPD;;AASA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEX,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,UAAU,EAAEW,UAFd;AAGE,IAAA,UAAU,EAAEK,UAHd;AAIE,IAAA,QAAQ,EAAEE,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAYAjB,EAAAA,QAAQ;AACT;;AAED,eAAeH,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport useTodoState from \"../hooks/useTodoState\";\n\nimport { Paper, Divider } from \"@material-ui/core\";\nimport uuid from \"uuid/v4\";\n\nfunction TodoApp() {\n  const initialTodos = [\n    // {\n    //   id: 1,\n    //   task: \"Wash car\",\n    //   category: \"social\",\n    //   date: \"yesterday,\",\n    //   completed: false\n    // },\n    // {\n    //   id: 2,\n    //   task: \"Buy a New pc\",\n    //   category: \"personal\",\n    //   date: \"today\",\n    //   completed: false\n    // },\n    // {\n    //   id: 3,\n    //   task: \"Learn chinese\",\n    //   category: \"reading\",\n    //   date: \"tomorrow\",\n    //   completed: false\n    // }\n  ];\n  const [todos, setTodos] = useState(initialTodos);\n  const addTodo = (newTodoText, newCategory, newDate) => {\n    setTodos([\n      ...todos,\n      {\n        id: uuid(),\n        category: newCategory,\n        task: newTodoText,\n        date: newDate,\n        completed: false\n      }\n    ]);\n  };\n\n  const removeTodo = todoId => {\n    const updatedTodos = todos.filter(todo => todo.id !== todoId);\n    setTodos(updatedTodos);\n  };\n\n  const toggleTodo = todoId => {\n    const updatedTodos = todos.map(todo =>\n      todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n    );\n    setTodos(updatedTodos);\n  };\n\n  const editTodo = (todoId, newTask, newCategory, newDate) => {\n    const updatedTodos = todos.map(todo =>\n      todo.id === todoId\n        ? { ...todo, task: newTask, category: newCategory, date: newDate }\n        : todo\n    );\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <Paper>\n      <TodoForm addTodo={addTodo} />\n      <Divider />\n      <TodoList\n        todos={todos}\n        removeTodo={removeTodo}\n        toggleTodo={toggleTodo}\n        editTodo={editTodo}\n      />\n    </Paper>\n  );\n  setTodos();\n}\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}